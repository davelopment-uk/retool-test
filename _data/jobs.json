[{"id": 1096, "index": "1096", "job_title": "UX Researcher", "employer": "The Est\u00e9e Lauder Companies", "publish": "TRUE", "publication_date": "Tue, 10 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://jobs.elcompanies.com/estee-lauder-companies/jobs/2226568?lang=en-us", "job_id": "dsswea87", "logo_link": "/jobs/logos/Este\u0301e_Lauder_Companies_Logo.svg", "location": "London", "apply_by_date": "", "work_pat": "Part Time (3 days per week)", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://elcompanies.taleo.net/careersection/iam/accessmanagement/login.jsf?lang=en&redirectionURI=https%3A%2F%2Felcompanies.taleo.net%2Fcareersection%2Fexternal%2Fjobapply.ftl%3Fjob%3D2226568%26lang%3Den%26source%3DEsteeLauder%2BCareers%2BSite%26src%3DJB-10400&TARGET=https%3A%2F%2Felcompanies.taleo.net%2Fcareersection%2Fexternal%2Fjobapply.ftl%3Fjob%3D2226568%26lang%3Den%26source%3DEsteeLauder%2BCareers%2BSite%26", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<h2 id=\"job-description\">Job Description</h2>\n<h3 id=\"position-summary\">Position Summary</h3>\n<p>This is an exciting UX Researcher position with a growing Online Design Team at ELC. The successful candidate will be responsible for advocating the needs of our customers to the wider business will contribute to defining the practice in our region. You will be key in exposing the many colleagues in the UK online business to the discipline for the first time \u2013 presenting an opportunity to influence how we evaluate existing experiences and develop new ones.</p>\n<p>You have a passion for understanding people, their motivations and their behaviours in shopping for beauty products. You relish the chance to engage with stakeholders and get them excited about UX Research.</p>\n<p>This position would suit an experienced candidate used to working within larger organisations in an Agile environment.</p>\n<h3 id=\"what-this-role-does\">What This Role Does</h3>\n<ul>\n<li>Plan, design and conduct high-priority hands-on UX Research across our multiple UK transactional websites </li>\n<li>End to end research activities from project definition all the way through to delivering insights to stakeholders</li>\n<li>Create a variety of different outputs such as presentations, reports and visualisations </li>\n<li>Advocate for UXR and engage stakeholders in the process, encouraging wider team members to actively participate</li>\n<li>Help define how we incorporate UXR into our project lifecycle alongside product management and design</li>\n<li>Help define best practices in how we present, document and catalogue insights</li>\n<li>Help define how we join our work together with insights from other business sources like Customer services and analytics</li>\n<li>Work closely with the Design &amp; UX Manager and the existing team to define how the UXR function should operate in the UK region, including processes, tooling and working with 3rd parties.</li>\n</ul>\n<h3 id=\"relationships\">Relationships</h3>\n<p>Will work closely alongside designers, product managers, the brands, analytics and UX team members across regions.</p>\n<h2 id=\"qualifications\">Qualifications</h2>\n<p>What you will need to be successful in this role</p>\n<h3 id=\"essential\">Essential</h3>\n<ul>\n<li>Solid experience working on UX Research for digital products, gained working as part of in-house teams</li>\n<li>Solid best-practice knowledge of Research as part of a User Centered Design process</li>\n<li>Demonstrable experience in a wide variety of quant and qual research techniques and methodologies </li>\n<li>Experience using tools for moderated and unmoderated remote research (Usertesting.com, UserZoom, Optimal Workshop or similar)</li>\n<li>Confident and persuasive communicator with great presentation skills, able to impart insights to stakeholders at all levels in a jargon-free non-technical manor.</li>\n<li>Comfortable working in collaboration with UX/UI Designers, Product Managers, Analytics and brand stakeholders</li>\n<li>Comfortable being a subject matter expert for UX Research in our region</li>\n<li>Passionate advocate of User Research, with a track record of facilitating the participation of stakeholders in the process</li>\n</ul>\n<h3 id=\"desirable\">Desirable</h3>\n<ul>\n<li>In-house experience working at a major UK online retailer</li>\n<li>Keen interest in the beauty industry and associated trends</li>\n<li>Previous experience working with and managing 3rd party agencies</li>\n<li>Solid knowledge of Digital Accessibility best practices</li>\n<li>Candidates with hybrid UX Research &amp; UX Design experience will be considered</li>\n</ul>\n<h2 id=\"compensation-and-benefits\">Compensation and Benefits</h2>\n<ul>\n<li>Hybrid Working (2 days WFH, 3 days office based)</li>\n<li>Generous Bonus Opportunity that usually performs ahead of target</li>\n<li>25 Days Annual Leave (exc. Bank Holidays) that increases with length of service up to 29 days.</li>\n<li>1 additional day of Annual Leave to celebrate your birthday</li>\n<li>Holiday Purchase scheme that enables you to get five additional days</li>\n<li>Summer Fridays for five months of the year</li>\n<li>Market leading Family Leave provisions</li>\n<li>Generous Staff Discount &amp; Credit</li>\n<li>Benefits platform with exclusive discounts and offers</li>\n<li>Mental Health Wellbeing Provisions (Unmind App and Employee Assistant Programme)</li>\n</ul>\n<p>Job: Online / E-Commerce\nPrimary Location: GB-ENG-London\nJob Type: Standard\nSchedule: Full-time\nShift: 1st (Day) Shift\nJob Number: 2226568</p>\n<p>Estee Lauder Companies is an equal opportunities employer. We positively encourage applications from suitably qualified and eligible candidates regardless of sex, race, disability, age, sexual orientation, gender reassignment, religion or belief, marital status, or pregnancy and maternity.</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1097, "index": "1097", "job_title": "Product Designer", "employer": "Pledge", "publish": "TRUE", "publication_date": "Tue, 10 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://jobs.ashbyhq.com/pledge.earth/4cdb3e54-9ff3-4a96-8a80-d423e117d223", "job_id": "paaqws23", "logo_link": "/jobs/logos/pledge-logo.png", "location": "London, Hybrid", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://jobs.ashbyhq.com/pledge.earth/4cdb3e54-9ff3-4a96-8a80-d423e117d223/application", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<h2 id=\"about-pledge\">About Pledge</h2>\n<p>Pledge is a climate infrastructure platform making it simple for businesses of every size to integrate carbon measurement &amp; offsetting tools into their customer experience. The initial focus is set on high-emitting use cases such as logistics and transportation. The team is on a mission to make businesses climate aware and help accelerate their transition to net zero.</p>\n<p>Pledge was founded in 2021 by early employees of Revolut and the co-founder of Freetrade. Investors include climate and b2b technology investors <a href=\"https://visionaries.vc/\">Visionaries Club</a>, <a href=\"https://lowercarboncapital.com/\">Lowercarbon Capital</a> as well as the founders of Checkout.com and Unity.</p>\n<h2 id=\"about-the-role\">About the role</h2>\n<p>You will be integral to developing and designing new and existing products which help us achieve our mission. You&#39;ll work in close collaboration with the founders, designers, product managers, engineering, and other internal and external stakeholders.</p>\n<p>Pledge works with B2B customers across a range of sectors including logistics, travel, e-commerce and fintech amongst others. The role will entail building a deep understanding of our business and our customers\u2019 needs in order to build products that people will love to use and will contribute to the success of the business and the mission.</p>\n<h2 id=\"what-youll-be-doing\">What You&#39;ll be doing</h2>\n<ul>\n<li>You\u2019ll be working across multiple products or product features for our customers and our internal admin portals.</li>\n<li>You\u2019ll be evolving our design systems and working with design best practices</li>\n<li>You\u2019ll be interacting directly with product and engineering</li>\n</ul>\n<h2 id=\"what-youll-need\">What You&#39;ll need</h2>\n<ul>\n<li>2 to 5+ years of experience as a product designer with skills ranging from UX design to high fidelity UI design, including prototyping.</li>\n<li>You have strong visual and interaction design skills. Regardless of the scale of the project, you aim to deliver high-quality to your end-user</li>\n<li>Experience working in a cross-functional product team, ideally building B2B SaaS products </li>\n<li>Experience in a fast-paced environment</li>\n<li>Knowledge and experience of industry best practices and tools (e.g. WCAG accessibility, Figma, Miro)</li>\n</ul>\n<h2 id=\"what-will-make-you-successful\">What will make you successful</h2>\n<ul>\n<li>You share Pledge\u2019s mission to help businesses make a positive environmental impact</li>\n<li>You can work autonomously with a high degree of integrity</li>\n<li>You operate best without lots of bureaucracy</li>\n<li>You have an obsession with solving customer problems and get excited about spending time with users of your products</li>\n<li>You approach work in a logical way and operate from first principles</li>\n</ul>\n<h2 id=\"benefits\">Benefits</h2>\n<ul>\n<li>Generous stock options - we are all owners of Pledge</li>\n<li>Competitive salary</li>\n<li>25 days holiday (excl. bank holidays) increasing by 1 day each year of employment</li>\n<li>Pension plan</li>\n<li>Private health insurance (You\u2019ll have full access to private online GP appointments, mental health support, and a Care Hub)</li>\n<li>Cycle to work scheme</li>\n<li>Regular team socials</li>\n</ul>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1098, "index": "1098", "job_title": "Product Design Lead", "employer": "Able", "publish": "TRUE", "publication_date": "Wed, 11 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://jobs.ashbyhq.com/Able/ef4cc6b6-397c-42a8-b953-c7172ff6f09b", "job_id": "gftrdn91", "logo_link": "/jobs/logos/able-logo.png", "location": "Remote", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://jobs.ashbyhq.com/Able/ef4cc6b6-397c-42a8-b953-c7172ff6f09b/application", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<h2 id=\"overview\">Overview</h2>\n<p>Able is a purpose-driven company focused on making the overall population fitter, healthier, and happier by providing a 360-degree personalized approach to weight care for tens of thousands of people worldwide.</p>\n<p>We are customer-obsessed, authentic, and super pumped to create innovative tech solutions that are accessible and will impact and improve the lives of our customers.</p>\n<h2 id=\"able\">Able</h2>\n<p>Able is different.</p>\n<p>It provides a science-backed, comprehensive program personalized to users&#39; biology and lifestyle and supported by 1-on-1 coaching. It&#39;s the safest and most effective way to improve metabolic health and achieve sustained weight care.</p>\n<h2 id=\"the-team\">The team</h2>\n<p>You will be joining a strong team of &gt;70 people with high talent density who enjoy working in our fast-paced, 100% remote environment. Our team is fully international and passionate about building the future of health and weight care for our customers.</p>\n<h2 id=\"about-the-role\">About the role</h2>\n<p>We are seeking a skilled and experienced Product Design Lead to define design strategy, manage the design team, develop processes, and establish good communication within the team. As a Product Design Lead, you will be responsible for leading and coordinating multiple design workstreams for user-facing products. You will use your expertise to guide designers and ensure their work aligns with the overall strategy. You will also serve as a partner in business and implementation decisions, advocating for the needs of users by applying your understanding of how to transform insights into data-driven, human-centric designs.</p>\n<p>This is a unique opportunity to work cross-functionally within Able and innovate in the weight care and wellness industry, with the goal of helping people live healthier, happier, and longer lives.</p>\n<p>Here are a few words from Frank Callan, our Head of Product at Able, about this opportunity:</p>\n<p>\ud83c\udfa5 <a href=\"https://www.loom.com/share/a0f24930db1b4b229fb4d8a06b4cfe17\">https://www.loom.com/share/a0f24930db1b4b229fb4d8a06b4cfe17</a></p>\n<h2 id=\"what-youll-do\">What you\u2019ll do</h2>\n<ul>\n<li>Lead and manage a talented, diverse, and inclusive team of Product Designers to consistently deliver high-quality user experiences across Able</li>\n<li>Support and coach designers in achieving their career goals and personal development</li>\n<li>Maintain a culture of design simplicity, ensuring that new features and products are simple, elegant, and usable</li>\n<li>Work closely with the Head of Product, Engineering, Marketing Leads, and Founder to shape the product roadmap, both short-term and long-term</li>\n<li>Clearly articulate vision and strategy to the Product Design Team</li>\n<li>Foster a culture of design feedback, providing honest and sensitive feedback to team members to help them grow and develop their skills</li>\n<li>Research competitors, trends, patterns, best practices, UX design inspiration, user and business insights</li>\n<li>Improve team scalability through documentation and process improvement and provide leadership</li>\n<li>Establish best practices in design management and employ useful design frameworks to support team growth</li>\n<li>Collaborate with stakeholders and other disciplines to facilitate successful delivery within agile teams</li>\n</ul>\n<h2 id=\"about-you\">About you</h2>\n<ul>\n<li>7+ years of experience delivering successful work for entire product areas for native mobile, web, and/or software applications</li>\n<li>Strong portfolio showcasing work and case studies</li>\n<li>Demonstrated track record as a Product Design visionary, executor, and team-builder</li>\n<li>Leadership skills and the ability to inspire others and direct designs toward creative, user-centric solutions</li>\n<li>Experience as a people manager who can support and strengthen a design team</li>\n<li>Strong communication skills and empathy to unify people and ideas across disciplines</li>\n<li>Ability to identify the true needs of users and apply insights to design strategy and product needs</li>\n<li>Experience collaborating with cross-functional teams in fast-paced, agile environments</li>\n<li>Experience with experiment design approaches to achieve business goals</li>\n</ul>\n<h2 id=\"benefits\">Benefits</h2>\n<ul>\n<li>Flexible, remote working environment</li>\n<li>Employee share options program</li>\n<li>In-person company retreats and virtual gatherings</li>\n<li>Apple laptop and equipment for your needs</li>\n<li>Unlimited paid holidays</li>\n<li>Work with incredibly talented colleagues</li>\n</ul>\n<h2 id=\"life-at-able\">Life at Able</h2>\n<p>By joining Able, you\u2019ll become part of a team that picks each other up, collaborates daily, and works hard, fast, and smart because they\u2019re motivated and passionate about being the best in the industry. We thrive on innovation, we push the boundaries, and we\u2019re proud of the work we do that really helps thousands of people live happier and healthier lives!</p>\n<h2 id=\"equality\">Equality</h2>\n<p>All qualified applicants will receive consideration for employment without regard to sex, gender identity, sexual orientation, race, color, religion, national origin, disability, protected Veteran status, age, or any other characteristic protected by law.</p>\n<p>#LI-Remote</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1100, "index": "1100", "job_title": "Product Designer", "employer": "Loupe", "publish": "TRUE", "publication_date": "Fri, 13 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://boards.greenhouse.io/ateliertechnology/jobs/4773484004", "job_id": "ovxgg65", "logo_link": "/jobs/logos/loupe-Logo-sans-R.png", "location": "London, Remote", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://boards.greenhouse.io/ateliertechnology/jobs/4773484004#app", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<h2 id=\"about-us\">About us</h2>\n<p>The $400bn Jewellery &amp; Watch market (bigger than Taxis &amp; Books put together) runs on supply chains plagued by maverick buying, manual process, poor tracking and fragmented communication. <a href=\"https://atelier.technology/\">Atelier Technology</a> are pioneers, introducing supply chain SaaS into this giant sector, with no direct competition we enjoy a 5 year head-start on the creation of the industry\u2019s first <a href=\"https://www.nfx.com/post/10-years-about-market-networks\">market network </a></p>\n<p>Our investors include Swarovski and Chow Tai Fook (China\u2019s largest retailer and world&#39;s largest consumer of diamonds). We believe that every employee that plays a key role in realising our vision should be rewarded, which is why we strive to optimise our fundraising strategy to protect our employees over venture capitalists.</p>\n<p>Our mission has attracted top-tier employees to join us from some of the most important brands, retailers and vendors who understand the problem space deeply.</p>\n<p>The gold and diamond industry suffers from a lack of transparency, industry efforts such as the Responsible Jewellery Council have set a mission to solve these problems but lack the technology to achieve it. Atelier is building an unprecedented community of vetted / premium companies that all adhere to these global standards.</p>\n<p>We are currently a remote first company, but are flexible to ensure you are able to work where you are most productive.</p>\n<p><a href=\"https://atelier.technology/\">Atelier Technology</a> is looking for candidates who want to work in a fast paced startup environment, that want to make a noticeable impact with rapid career progression.</p>\n<h2 id=\"our-values\">Our Values</h2>\n<ul>\n<li>Start With Empathy</li>\n<li>Be Brave</li>\n<li>User Centric</li>\n<li>Learn &amp; Share</li>\n<li>Bias For Action</li>\n<li>Transparency Builds Trust</li>\n<li>Set The Bar High</li>\n</ul>\n<h2 id=\"role-purpose\">Role Purpose</h2>\n<p>As a Product Designer at Loupe, you\u2019ll work on improving the experience of users on all sides of our marketplace and on new feature development.</p>\n<p>We are seeking a Product Designer with <strong>experience in managing design systems (FIGMA is a must)</strong>. Whether through wire-framing, optimising information architecture, prototyping and user-testing designs to help inform key decisions, or creating modern interface components and layouts that elevate our design system\u2026 the Product Designer is advocating for user-centred principles in everything they do. </p>\n<p><strong>Please send your portfolio, including assets or designs demonstrating different user flows (where possible) with all submission of applications.</strong></p>\n<h2 id=\"responsibilities\">Responsibilities</h2>\n<ul>\n<li>Create high-quality design assets (in Figma) as well as interactive prototypes to communicate your work.</li>\n<li>Maintain the design system (in Figma): create, and update documentation, and library components. </li>\n<li>Plan strategically to define the future of the design system. Establish design standards and principles accompanying the design system for scalability, efficiency, and consistency</li>\n<li>Work at a start-up pace with designers, researchers, product owners and other stakeholders to solve complex problems with simple solutions</li>\n<li>Communicate design decisions and the rationale behind them throughout the company</li>\n<li>Work with our UX researchers to define, conduct, analyse and report on user-centred design research and usability testing, and incorporate these learnings into new designs</li>\n</ul>\n<h2 id=\"skills-and-experience\">Skills and Experience</h2>\n<h3 id=\"must-have\">Must have</h3>\n<ul>\n<li>Experience with Design Systems in FIGMA (see bullet 1 below)</li>\n<li>End to end Design skills (graphic/visual/UI)</li>\n<li>Experience creating and maintaining design system documentation</li>\n<li>Organised and structured style </li>\n<li>Customer centric approach</li>\n</ul>\n<h3 id=\"skills-continued\">Skills continued\u2026</h3>\n<ul>\n<li>Demonstrable experience building design systems, component libraries, and/or UI Kits in Figma (this is a must have, and you will not be progressed without it).</li>\n<li>Experience creating and maintaining clean design system documentation</li>\n<li>A minimum of 3 years product design experience</li>\n<li>Experience with B2B SaaS applications is preferential </li>\n<li>End-to-end design skills including strong graphic/UI/visual design skills</li>\n<li>Solid understanding of design theory (typography, colour, grid, etc.)</li>\n<li>Experience working remotely</li>\n<li>Excellent communication skills, both written and verbal</li>\n<li>An impressive UI portfolio showing how you think about things and how you execute your thinking and how you manage design systems.</li>\n<li>Organised and structured mind approach to Design, with customer centricity and scalability in all decision making</li>\n</ul>\n<h3 id=\"nice-to-have\">Nice to have</h3>\n<ul>\n<li>copywriting experience and willingness to use it while designing</li>\n<li>experience with Storybook</li>\n</ul>\n<h2 id=\"our-benefits\">Our Benefits</h2>\n<ul>\n<li>Competitive salary</li>\n<li>Rest up with 33 days holiday per year, with rollover allowance</li>\n<li>Your birthday off</li>\n<li>All the latest tech you need</li>\n<li>9 to 5 pm are the normal working hours. We value contribution over facetime</li>\n<li>Your own learning budget for professional development</li>\n<li>Work-from-home budget upon joining, so you can kit out your home office</li>\n<li>Annual trip to Swarovski headquarters in Austria to meet the whole team in person</li>\n<li>Dedicated charity day for the team to help those less fortunate</li>\n</ul>\n<h2 id=\"our-commitment\">Our Commitment</h2>\n<p>Atelier is an equal opportunity employer and as a company, we value authenticity and integrity. We strive to be different and know that if we are to create the most innovative products and deliver the best customer experience, we need to build a diverse team of individuals who can bring a variety of skills, experiences and perspectives to the table. No matter your age, gender, sexual orientation, gender identity, ethnicity, religion or physical ability, at Atelier, your individuality is celebrated.</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1101, "index": "1101", "job_title": "Product Designer", "employer": "Converge", "publish": "TRUE", "publication_date": "Fri, 13 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://apply.workable.com/converge/j/601E03705F/", "job_id": "ppwwbb76", "logo_link": "/jobs/logos/converge-logo.png", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://apply.workable.com/converge/j/601E03705F/apply/", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<h2 id=\"description\">Description</h2>\n<p>We are looking for a Product Designer to join our growing team. We are expanding our suite of products and are looking for someone to help us define and design the features that create value for our users. You will report to our Head of Design, with an opportunity to shape key products and features within our roadmap as we build the future.</p>\n<h2 id=\"about-the-role\">About the role</h2>\n<p>As a Product Designer, you will be part of our design team, where your role will be to discover how our technology can support and completely redefine the construction process. This means: translating user needs into clear design concepts; creating flows, prototypes, and high-fidelity visuals for product features; collaborating closely with our engineers to ensure a high-quality implementation; and, ultimately, creating a magical product in concert with the rest of the team.</p>\n<p>You will have responsibility and ownership over the design of simple and intuitive user experiences for new product features as we create the products to increase productivity and sustainability in the construction industry. You\u2019ll work directly with our product team and development teams to ship features that enhance the value our products create for the business and our customers in a fast-paced, complex environment.</p>\n<h2 id=\"your-team\">Your Team</h2>\n<p>Originally from Transylvania, Mircea is a digital product designer with a creative soul and the mind of an engineer. He joined Converge over four years ago to shape user-centred experiences that define our product. He focuses on digital products vision, user experience, interaction &amp; visual design. Outside work, Mircea likes motorbikes, hiking, skiing, rollerblading, travelling and sci-fi.</p>\n<h2 id=\"key-responsibilities\">Key Responsibilities</h2>\n<p>You will:</p>\n<ul>\n<li>Apply your design thinking and execution skills throughout the entire product lifecycle.</li>\n<li>Own the solution process, create design concepts (wireframes, prototypes, information architecture), and iterate quickly to validate.</li>\n<li>Communicate your work succinctly and effectively, aligning the outcome across different functions in the organisation.</li>\n<li>Take a data-driven approach, running user testing and user research, looking for user behaviour patterns, and provide valuable insights to the Product team.</li>\n<li>Run A/B and MVT tests, constantly auditing and revising our assumptions and previous designs.</li>\n<li>Deliver beautiful final visuals and interaction designs.</li>\n</ul>\n<h2 id=\"about-you\">About you</h2>\n<p>You should have:</p>\n<ul>\n<li>A portfolio that reflects your strengths in both UX and visual design skills (end-to-end product design).</li>\n<li>Mastery over your design process and methodology, with the desire and ability to help shape ours.</li>\n<li>3yrs+ experience designing digital products and services, including user experience, interaction and user interface design), delivering solutions that have elevated customer and user experience.</li>\n<li>A general understanding of how design impacts development, along with a knack for constructing dynamic, interactive designs that are technically feasible.</li>\n<li>Experience in user research and usability testing best practice, specifically in regards to user-centred design.</li>\n<li>Experience in hypothesis-driven design, A/B testing, and defining quick and inexpensive ways of learning and iterating.</li>\n<li>Experience with Sketch, Figma, XD, and InVision.</li>\n</ul>\n<p>Nice to have:</p>\n<ul>\n<li>A good understanding of the challenges of working on products that have both digital and physical elements.</li>\n<li>Experience launching entire products at global scale.</li>\n<li>Experience designing for B2B audiences with complex problems.</li>\n</ul>\n<h2 id=\"benefits\">Benefits</h2>\n<p>Learn more about our team, benefits and perks on our <a href=\"https://www.converge.io/careers\">website</a>!</p>\n<p>To ensure we&#39;re attracting a diverse group of candidates, we check all our job descriptions on <a href=\"http://gender-decoder.katmatfield.com/about\">http://gender-decoder.katmatfield.com/about</a></p>\n<p>Agency note: any unsolicited CVs or profiles sent to us will be viewed as gifts and will not be considered liable for a fee. We are only working with agencies on our PSL and are not looking to make any additions. Thank you.</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1102, "index": "1102", "job_title": "Mid-weight Product Designer (UX/UI)", "employer": "Freddie\u2019s Flowers", "publish": "TRUE", "publication_date": "Fri, 13 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://apply.workable.com/freddies-flowers-1/j/1926FCE1A5/", "job_id": "kkjuhh66", "logo_link": "/jobs/logos/freddies-flowers.png", "location": "Battersea", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://apply.workable.com/freddies-flowers-1/j/1926FCE1A5/apply/", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<h2 id=\"description\">Description</h2>\n<p>Freddie\u2019s Flowers was founded by Freddie Garland in October 2014 with the aim of changing people\u2019s relationships with flowers in an ethical, and sustainable way. We want to challenge the view that flowers are for others or for special occasions, and so we offer a completely different experience to other flower businesses.</p>\n<p>Our direct-to-consumer subscription model has been hugely successful in the UK and internationally, with our customer base almost doubling last year alone. In 2021, we secured significant investment and backing from The Craftory, a purpose-led global investment house, and are about to undertake our largest ever programme of expansion in the UK and internationally.</p>\n<p>Our rapid growth means we\u2019re constantly looking for great people to join our fantastic team in the UK and overseas - it is our incredible people who make Freddie\u2019s Flowers what it is.</p>\n<p>So come and help us spread the joy of flowers to everyone in a fun, fast-paced and collaborative working environment!</p>\n<p>Freddie\u2019s Flowers have an exciting opportunity for a Mid-weight Product Designer (UX/UI) to join our Product Team. You will be working closely with our Senior Product Designer to help drive the Product Design that our customers use to discover, experience and share the joy of flowers. The ideal candidate will have a holistic approach to product design, and a portfolio that covers both UX and UI processes.</p>\n<h2 id=\"what-youll-be-doing\">What You\u2019ll Be Doing</h2>\n<ul>\n<li>Work closely with the product team to deliver high quality mockups and prototypes for web and mobile</li>\n<li>Maintain and improve our internal design systems.</li>\n<li>Champion the voice of the customer</li>\n<li>Assist with customer research and market analysis</li>\n<li>Present wireframes, mockups and prototypes to cross-functional teams and senior stakeholders</li>\n<li>Coordinate with product engineers to help translate designs into functional digital products</li>\n<li>Support Product and QA to test functionality and provide feedback to ensure correct implementation of UX/UI</li>\n</ul>\n<h2 id=\"requirements\">Requirements</h2>\n<ul>\n<li>Portfolio of work demonstrating strong product design, proven customer benefit and clear ways of working</li>\n<li>In-depth working knowledge of Figma, the Adobe Suite and other design software.</li>\n<li>Effective communication skills</li>\n<li>Be product-focussed, able to provide new ideas to improve our digital product cycle</li>\n<li>Apply judgement to identify and understand problems</li>\n<li>Proven adaptability to be effective through ambiguous situations, meet deadlines and thrive in a fast-paced environment</li>\n<li>An effective collaborator working in cross-functional teams to combine resources to achieve company-wide goals</li>\n<li>Demonstrate innovative end-to-end thinking through customer advocacy to generate new ideas that meet customer needs</li>\n<li>Results-driven with a proven track record of delivering solutions that enhance business KPI</li>\n</ul>\n<h2 id=\"benefits\">Benefits</h2>\n<ul>\n<li>Option to buy extra holiday days</li>\n<li>Discounted flowers for friends/family</li>\n<li>WFH (where applicable)</li>\n<li>Learning and Development Support</li>\n<li>Cycle to work scheme</li>\n<li>Employee Assistance Programme</li>\n<li>Discounted gym membership</li>\n<li>Yoga twice a week</li>\n<li>Health and wellbeing sessions with The Mind Clinic</li>\n<li>Team socials and events</li>\n<li>Weekly lunch</li>\n<li>An abundance of organic snacks</li>\n<li>And Flowers !</li>\n</ul>\n<h2 id=\"inclusion\">Inclusion</h2>\n<p>Freddie\u2019s Flowers recognises our success is dependent on the success of our people. Freddie\u2019s Flowers is committed to creating an inclusive work environment with a diverse workforce where everyone feels safe and valued. All applicants will receive consideration for</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1105, "index": "1105", "job_title": "Senior Manager, Product Design", "employer": "NewDay", "publish": "TRUE", "publication_date": "Mon, 16 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://careers.newday.co.uk/current-vacancies/?job=501869", "job_id": "pzquhg02", "logo_link": "/jobs/logos/newday-ltd-vector-logo.svg", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://secure.dc3.pageuppeople.com/apply/728/aw/applicationForm/initApplication.asp?lJobID=501869&sLanguage=en&sSourcePointer=aw&lJobSourceTypeID=796", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<h2 id=\"overview-of-the-role-and-team-structure\">Overview of the role and team structure</h2>\n<p>We are looking for a Senior Manager, Product Designer with a focus on UX, UI, and User Research to join our Product Design team in London. You will collaborate with the acquisition team to build and improve the acquisition and user experience for our own brand and loan products such as Aqua, Bip, Marbles, Fluid and Opus.</p>\n<p>You&#39;ll get to be hands-on and lead a small team of product designers to create end to end experiences, from research and discovery to defining opportunities, concepting and prototyping, user testing, shipping, measuring, and iterating. This will be done in collaboration with a positive team of developers, product managers, and data analysts.</p>\n<p>Your product squads, your line manager, product managers, and, of course, our entire Product Design team will mentor and support you on a regular basis.</p>\n<h2 id=\"what-youll-be-doing\">What you\u2019ll be doing</h2>\n<p>Over the weeks, it looks like:</p>\n<ul>\n<li><strong>Planning and Prioritising.</strong> Working closely with business partners and squads to plan and prioritise new functionality, optimisations and areas of focus together and across your team.</li>\n<li><strong>Research activities.</strong> Conducting primary and secondary user research and testing to gain a deep understanding of our users. Reviewing data with Analysts to understand and measure behaviours.</li>\n<li><strong>Experience mapping.</strong> Understanding our users goals, desires and expectations. Facilitate mapping the experience, journeys and flows to help us prioritise problems and opportunities.</li>\n<li><strong>Workshop Facilitation.</strong> Working with the business to develop ideas and prioritise. Plan and facilitate co-creation workshops.</li>\n<li><strong>Crafting user interfaces.</strong> Translate your concepts into appealing UI designs with a strong focus on Responsive Web Design principles. Provide a design spec to support implementation.</li>\n<li>** Testing and learning.** Using a variety of testing approaches and tactics; card sorting, clickable prototypes, usability studies, tree testing and think out loud studies.</li>\n<li><strong>Measuring and iterating.</strong> Measuring the outcomes of your work whilst iterating and prioritising identified areas of improvement.</li>\n<li><strong>Review implementation.</strong> Working together with the developers you will aid in implementation and review the final output before it\u2019s shipped.</li>\n<li><strong>Growing the design system.</strong> Coordinate new components, layouts, grids, flows and interactions which will foster into our design system and component library.</li>\n<li><strong>Team management.</strong> Support, mentor and challenge your team members to always bring their best. Help set clear goals and priorities for your team, and regularly check in on progress.</li>\n<li><strong>Influencing product strategy.</strong> Function as a strategic partner with our Product Managers to shape product roadmaps and contextualise high-level decisions and directions to your team.</li>\n<li><strong>Establish relationships</strong> across cross-functional team members from Product, Marketing, Development, Analysts and speak to the overall product strategy, design goals and execution.</li>\n</ul>\n<h2 id=\"what-were-looking-for-from-you\">What we\u2019re looking for from you</h2>\n<ul>\n<li><strong>Candidates who can demonstrate strong end-to-end product design proficiencies.</strong> You\u2019ll have shipped numerous features and iterations, perhaps across multiple products. You have been a product designer for some time.</li>\n<li><strong>A strong collaborator.</strong> We highly encourage collaboration within the team, and believe it is a core requirement for this role. Working with a cross-functional team made up of Product Managers, Developers and Analysts, as well as adopting feedback from the wider Product Design team and other business partners.</li>\n<li><strong>Expert knowledge of design and research tools.</strong> Mastered the likes of Figma, Adobe Creative Suite, Miro, UserZoom and MS Office.</li>\n<li><strong>Good analytical skills.</strong> You\u2019ll have to use data as part of the process, in order to establish relevant critical metrics and to extract useful information.</li>\n<li><strong>Knowledge of Agile methodologies.</strong> Experience in working within scrum teams and aware of the ceremonies that take place.</li>\n<li><strong>Clear and confident communicator</strong> that can present, demo and articulate their design decisions to your peers and to our senior business partners.</li>\n<li><strong>Understanding of Accessibility standards (WCAG AA).</strong> Help us strive towards shipping products that are inclusive and accessible to everyone.</li>\n<li><strong>People leadership.</strong> You\u2019re experienced in leading designers and external consultants and have done so for a few years. You empower positively, mentor personally and encourage your team to bring their full self to work and be accountable for design quality.</li>\n<li><strong>Customer centricity.</strong> Champion a customer centric approach to user research and crafting new features and functionality in a commercial and cross team environment.</li>\n</ul>\n<h2 id=\"inclusion-at-newday\">Inclusion at NewDay</h2>\n<p>We are an equal opportunity employer and value diversity at our company. We want all our colleagues to feel able to bring their whole selves to work. We will not discriminate on the basis of age, physical or mental disability, gender reassignment, marriage and civil partnership, pregnancy and maternity, race (including colour, nationality, and ethnic or national origin), religion or belief, sex and sexual orientation. We will ensure that individuals with disabilities are provided reasonable adjustments to participate in the application and interview process.</p>\n<p> #LI-Hybrid</p>\n<p>#LI-DS1</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1106, "index": "1106", "job_title": "Founding UI/UX Designer", "employer": "Fleek", "publish": "TRUE", "publication_date": "Mon, 16 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://apply.workable.com/fleek/j/F2BF690881/", "job_id": "lzyjmb23", "logo_link": "/jobs/logos/fleek-logo.png", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://apply.workable.com/fleek/j/F2BF690881/apply/", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<h2 id=\"description\">Description</h2>\n<p><a href=\"http://joinfleek.com/\">Fleek</a> is a B2B Marketplace for wholesale second hand fashion. We enable professional resellers and retail stores to buy from vintage clothing suppliers around the world. We are backed by top Silicon Valley VCs like Andreessen Horowitz (a16z), Y Combinator, and more.</p>\n<h2 id=\"team\">Team</h2>\n<p>Fleek is a set of funky individuals who find unity in diversity with the single mission of helping sustainability, promoting circular fashion while building a beautiful product experience.</p>\n<p>Our 10 people team consists of ex-YC founders leading our engineering effort, ex-Uber &amp; Doordash folks leading our operations and supply strategy. Alongside our Growth team is lead by folks who went to Cambridge, Oxford and UC Berkeley.</p>\n<h2 id=\"business-challenge\">Business challenge</h2>\n<p>Fleek is a cross-border video commerce platform. As a founding designer your role is to identify key user flows that enhance the experience of using the platform. We have many key challenges that remain to be solved:</p>\n<ul>\n<li>Building a video first experience. We have static videos as well as video commerce in-app. There is a lot of data that is captured in these videos. As a designer you need to think about a slick experience that makes it easy to transact in a new medium</li>\n<li>Building for a global world with different languages. Because our buyers and suppliers often speak different languages; the designs need to consider translation &amp; easy to use features. And needs to span text, audio and video as medium.</li>\n<li>Supplier tools for managing inventory. A key challenge for Fleek is to accurately map supplier inventory so that it can be merchendized and sold easily. Given this industry is fairly offline the UI/UX challenge of an intuitive interface that works for the used clothing industry is yet to be devised.</li>\n</ul>\n<p>We are excited for our founding designer to come in and solve these key problems.</p>\n<h2 id=\"requirements\">Requirements</h2>\n<p>These are preferred but not necessary. If you find yourself especially drawn towards the role; please do not hesitate to reach out</p>\n<ul>\n<li>5+ years of experience doing product design</li>\n<li>Ability to work in modern frameworks such as Figma for collaboration</li>\n<li>Experience working with engineering teams. At Fleek everyone is a Product Owner incl. engineers &amp; designers.</li>\n<li>Prior experience in marketplaces or e-commerce is preferred</li>\n</ul>\n<h2 id=\"how-we-work\">How we work</h2>\n<p><strong>Fast</strong> - we move fast because there are small business owner who count on us. We have a duty to ship solutions for them and we can\u2019t be lazy about it. Big things can also happen fast <a href=\"https://patrickcollison.com/fast\">https://patrickcollison.com/fast</a></p>\n<p><strong>Remote first</strong> - current team members are in Asia, Europe and US. There are team specific meetings where we need time to overlap, the rest is flexible. Like <a href=\"https://about.gitlab.com/company/culture/all-remote/tips/#tips-for-leaders-and-other-companies\">https://about.gitlab.com/company/culture/all-remote/tips/#tips-for-leaders-and-other-companies</a></p>\n<p><strong>Collaborative</strong> - just like in sports, we focus on winning!</p>\n<h2 id=\"benefits\">Benefits</h2>\n<p>We at Fleek believe in happy employees :-)</p>\n<ul>\n<li>Comprehensive healthcare coverage</li>\n<li>Exclusive employee clothing drops courtesy Fleek</li>\n<li>Flexible work hours &amp; time off. We don\u2019t care where you are as long as the work gets done</li>\n<li>Shared ownership: Being On Fleek means you\u2019ll own a part of it</li>\n</ul>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1107, "index": "1107", "job_title": "UX Designer Level 1 (ICIS)", "employer": "Relx", "publish": "TRUE", "publication_date": "Tue, 17 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://relx.wd3.myworkdayjobs.com/en-US/relx/job/UK---London-Bishopsgate/UX-Designer_R53785-2", "job_id": "pmycew01", "logo_link": "/jobs/logos/RELX-logo.png", "location": "London, Bishopsgate", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://relx.wd3.myworkdayjobs.com/en-US/relx/job/UK---London-Bishopsgate/UX-Designer_R53785-2", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<p>At ICIS we believe in putting the customer at heart of everything we do. ICIS experience and interaction designers take complex tasks and make them intuitive and simple to use. Following best practice design process from discovery to delivery, you\u2019ll create user flows, wireframes, interface mockups and interactive prototypes\u2013you\u2019ll champion the user experience and bring our vision to life in a way that feels inspiring, elegant, relevant and even delightful.</p>\n<p>Through our digital transformation initiatives, we are breaking new ground and leading the way. As the world\u2019s largest global commodities, energy and sustainability focused information service, we are seeking a UX Designer Level I who will join a growing well regarded and passionate multidisciplinary design team, in delivering exceptional customer experiences.</p>\n<p>This is an exciting opportunity for a designer who thrives on solving complex problems, in a complex domain, across multiple channels. Our aim is to give companies in global commodities markets a competitive advantage. By delivering valuable news, insight and analytics tools, which enable our customers to identify and react to opportunities in markets which are constantly evolving.</p>\n<p>You will be at the forefront of research and design for our digital platforms across desktop, mobile, API and more. The design team plays an integral part in gathering insights about the attitudes, emotions, motivations and behaviours of customers to inspire and inform design. We collaborate closely with each other and with engineering and product management to create category-leading products that deliver value for our customers, and for ICIS. This is an opportunity to work within a growing design team, with guidance and support from senior designers and researchers. You\u2019ll rely on user-centered design methods to craft industry-leading user experiences\u2014from concept to go-live.</p>\n<p>You\u2019ll collaborate with your design partners to leverage and evolve \u2018Nova\u2019 the ICIS design system to build beautiful, innovative and inspired products that customers will love to use.</p>\n<p>With a global staff of more than 600, ICIS has employees based in London, Houston, New York, Singapore, Dubai, Shanghai, Guangzhou, Beijing, Mumbai, Tokyo, Karlsruhe and Milan.</p>\n<h2 id=\"we-want-to-hear-from-you-if-you-believe\">We want to hear from you if you believe</h2>\n<ul>\n<li>In the importance of user centred design, design thinking and placing customers at the heart of everything a business designs and delivers.</li>\n<li>That an exceptional, consistent customer experience should transcend every solution a business offers their customers.</li>\n<li>UX can fundamentally change the way we as a business can solve customers\u2019 problems.</li>\n<li>You\u2019ve got what it takes, are eager and willing to learn, grow, experiment, collaborate, communicate and deliver.</li>\n<li>You design with empathy and understanding, working with customers, your peers, seniors and the UX Director to deliver exceptional design solutions that support the worlds\u2019 largest organisations.</li>\n</ul>\n<h2 id=\"what-is-the-role\">What is the role?</h2>\n<p>We\u2019re looking for a UX Designer Level I to drive the strategy for our internal tools and customer facing platforms. This role requires a solid foundation of quantitative and qualitative research methods, design, ideation, and prototyping. You\u2019ll have a solid foundation of design process and methodology, facilitating workshops, managing stakeholders, exploring new techniques and pushing the team and the corporate vision forward. You will champion the client, helping the product, development teams and the wider business understand customer behaviours, needs and motivations and represent the voice of the customer at every opportunity.</p>\n<p>Our people are the center of who we are and what we stand for. OneICIS is how we operate, together, collaboratively and as one voice. We are customer driven by design with an ongoing drive to be customer focused by DNA. We are an open, inclusive and passionate team. Whatever your background you are welcome. We are a flexible employer and happy to accommodate different working solutions for the right talent. We are looking for talented and dynamic team players who focus on delivering successful outcomes. If that sounds like you and the criteria below match your skills, we want to hear from you</p>\n<h2 id=\"responsibilities\">Responsibilities</h2>\n<h3 id=\"customer-or-user-focus\">Customer (or User) Focus</h3>\n<ul>\n<li>Understands customer needs and experience through analytics, research and direct observation.</li>\n<li>Makes research driven recommendations to improve the overall user experience.</li>\n<li>Uses design tools to understand and explain the customer view (e.g. Personas, archetypes, Journey Maps, Task analysis).</li>\n<li>Learns about our competitors and regulations in the market.</li>\n</ul>\n<h3 id=\"creative-problem-solving\">Creative Problem Solving</h3>\n<ul>\n<li>Asks the right questions to explore the problem from a number of angles.</li>\n<li>Iterates and tests solution to check it solves the problem.</li>\n<li>Proposes solutions when faced with a new design challenge.</li>\n<li>Collaboratively analyses the results of research to recommend solutions.</li>\n<li>Looks for opportunities to develop new ideas or thinking within own role.</li>\n</ul>\n<h3 id=\"product-design\">Product Design</h3>\n<ul>\n<li>Assists in developing product / feature concepts following UCD practices.</li>\n<li>Iterates and delivers design assets, clearly articulating design rationale for product or feature concepts / components using tools such as wireframes, prototypes, and process flow diagrams.</li>\n<li>Works with existing design patterns and style guides, occasionally introducing new patterns.</li>\n</ul>\n<h3 id=\"data-driven-analysis--testing\">Data Driven Analysis &amp; Testing</h3>\n<ul>\n<li>Ensures work is tested with users collaborating with other functions as needed.</li>\n<li>Iterates work based on testing and data analysis.</li>\n<li>Explores data from analytics packages, customer insight or other sources to understand context of work.</li>\n<li>With support of team, uses data to establish key metrics for projects.</li>\n<li>Understands the nuances of researching in different contexts (remote / in person / unmoderated /moderated).</li>\n</ul>\n<h3 id=\"technical-skills\">Technical Skills</h3>\n<ul>\n<li>Uses design and prototyping software to intermediate level (e.g. Figma, Axure, Sketch, InVision).</li>\n<li>Has a good knowledge or learns quickly about the tech stack of the product or organisation.</li>\n<li>Understands the nuances of designing for different platforms.</li>\n<li>Proactively identifies personal needs for training in technical skills.</li>\n</ul>\n<h2 id=\"competencies\">Competencies</h2>\n<h3 id=\"personal-capability\">Personal Capability</h3>\n<ul>\n<li>Practices Self-Development </li>\n<li>Is curious and keen to learn and develop new ideas, skills and knowledge.</li>\n<li>Acts on feedback to improve him/herself.</li>\n<li>Looks for developmental opportunities in day-to-day work.</li>\n<li>Invests time and energy in self-development (professional qualifications, relevant reading, networking meetings, etc.).</li>\n</ul>\n<h3 id=\"solves-problems-and-analyzes-issues\">Solves Problems and Analyzes Issues</h3>\n<ul>\n<li>Is able to ask effective questions and collect facts from multiple sources in order to solve problems.</li>\n<li>Is able to effectively identify and analyze problems and propose solutions.</li>\n<li>Effectively manages day-to-day issues and problems without intervention.</li>\n</ul>\n<h3 id=\"innovates\">Innovates</h3>\n<ul>\n<li>\u201cBrainstorms\u201d with others to look for different approaches to current process and tasks.</li>\n<li>Looks for opportunities to develop new ideas or thinking within own role.</li>\n<li>Experiments with new ideas as part of role.</li>\n</ul>\n<h2 id=\"interpersonal-skills\">Interpersonal Skills</h2>\n<h3 id=\"communicates-powerfully-and-prolifically\">Communicates Powerfully and Prolifically</h3>\n<ul>\n<li>Demonstrates effective conversational skills, including active listening and questioning.</li>\n<li>Share\u2019s information relevant to own role.</li>\n<li>Participates in team presentations.</li>\n</ul>\n<h3 id=\"collaboration-and-teamwork\">Collaboration and Teamwork</h3>\n<ul>\n<li>Develops co-operative working relationships within the team.</li>\n<li>Considers how own style affects others and tailors\u2019 interactions accordingly.</li>\n<li>Looks for ways to develop mutually beneficial relationships across teams.</li>\n</ul>\n<h3 id=\"builds-relationships\">Builds Relationships</h3>\n<ul>\n<li>Is approachable and friendly.</li>\n<li>Asks for opinions of others.</li>\n<li>Participates in formal and informal gatherings to meet new people and develop new relationships.</li>\n</ul>\n<p>At Lexis Nexis Risk Solutions Group having diverse employees with different perspectives is key to creating innovative new products for our global customers. We have 35 diversity employee networks globally and prioritise ensuring inclusive leadership is part of our culture. Our aim is for every employee to be the best version of themselves. We would actively welcome applications from candidates of diverse backgrounds and underrepresented groups. </p>\n<p>We encourage applicants and employees to tell us about any health issues they may have to allow us to put in place reasonable adjustments that may support applicants in the application process and support employees to succeed in their role.</p>\n<h2 id=\"about-us\">About Us</h2>\n<p>RELX is a global provider of information and analytics for professional and business customers across industries.\nWe help scientists make new discoveries, lawyers win cases, doctors save lives and insurance companies offer customers lower prices. We save taxpayers and consumers money by preventing fraud and help executives forge commercial relationships with their clients.</p>\n<p>In short, we enable our customers to make better decisions, get better results and be more productive.</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1108, "index": "1108", "job_title": "Head of UX Research", "employer": "Cond\u00e9 Nast", "publish": "TRUE", "publication_date": "Wed, 18 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://condenast.wd5.myworkdayjobs.com/en-US/CondeCareers/job/The-Adelphi-London-GB/Head-of-UX-Research_R-12130", "job_id": "hhdcre45", "logo_link": "/jobs/logos/Cond\u00e9Nast-logo.svg", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://condenast.wd5.myworkdayjobs.com/en-US/CondeCareers/job/The-Adelphi-London-GB/Head-of-UX-Research_R-12130", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<p>Cond\u00e9 Nast is a global media company producing the highest quality content with a footprint of more than 1 billion consumers in 32 territories through print, digital, video and social platforms. The company\u2019s portfolio includes many of the world\u2019s most respected and influential media properties including Vogue, Vanity Fair, Glamour, Self, GQ, The New Yorker, Cond\u00e9 Nast Traveler/Traveller, Allure, AD, Bon App\u00e9tit and Wired, among others. Cond\u00e9 Nast Entertainment was launched in 2011 to develop film, television and premium digital video programming.</p>\n<h2 id=\"job-description\">Job Description</h2>\n<p>Cond\u00e9 Nast is a global media company, home to iconic brands including Vogue, GQ, Glamour, AD, Vanity Fair and Wired, among many others. Our award-winning content reaches 84 million consumers in print, 367 million in digital and 379 million across social platforms, and generates more than 1 billion video views each month.</p>\n<p>We are headquartered in London and New York, and operate in 31 markets worldwide, including China, France, Germany, India, Italy, Japan, Mexico &amp; Latin America, Spain, Taiwan, the U.K. and the U.S., with local licence partners across the globe.</p>\n<h2 id=\"the-role\">The Role</h2>\n<p>Our understanding of the audiences who consume our products, the contributors who shape them, and the landscape in which we operate is fundamental to the success of the design of our products.</p>\n<p>We are looking for a Head of UX Research to lead our global team, located in London, New York, and Bangalore, working across our portfolio of brands including Vogue, The New Yorker, Vanity Fair, and Wired.</p>\n<p>The Head of UX Research is responsible for spearheading our UX Research approach at Cond\u00e9 Nast to elevate the voice of the user in our product development decisions.</p>\n<h2 id=\"the-team\">The Team</h2>\n<p>Our mission is to empower the most iconic brands in media for business and creative success by creating the next-generation suite of content publishing and consumption experiences. We are a group of designers, product managers, engineers, strategists, and researchers dedicated to building innovative, user-centric products. </p>\n<p>Our team is experienced in visual design, interaction design, content design, and design research. We partner closely with editorial, product management, engineering, and business partners to strategize, design, and launch ambitious digital products. We believe that a well-formed design culture is essential to delivering top-notch work.</p>\n<h2 id=\"what-will-you-be-doing\">What will you be doing?</h2>\n<h3 id=\"lead-our-ux-research-approach\">Lead our UX research approach</h3>\n<ul>\n<li>You will work with design and product leaders to advocate for the right research at the right time, while also protecting the time and bandwidth of your direct reports. You will be responsible, in close collaboration with product and design leadership, for the planning and prioritisation of user research across the organisation.</li>\n</ul>\n<h3 id=\"champion-research\">Champion research</h3>\n<ul>\n<li>Unseen research is wasted research, and unresearched products are risky products. As the Head of UX Research, you will advocate for research more broadly, and for research on the most impactful projects. You will also champion research internally to ensure visibility and impact of your team\u2019s work.</li>\n</ul>\n<h3 id=\"represent-research-to-leadership\">Represent Research to Leadership</h3>\n<ul>\n<li>This role is a key part of our Design Leadership team. As Head of UX Research, you\u2019ll report to the VP of Design and shape design practices through close collaboration with fellow design and product leaders, whilst helping represent user research to senior leadership, including VP, SVP, and Executive levels.</li>\n</ul>\n<h3 id=\"manage-and-mentor-ux-researchers\">Manage and mentor UX Researchers</h3>\n<ul>\n<li>As the people and craft manager for all things UX Research, you will manage and mentor the globally distributed research team. You will foster an environment where your team feel supported and motivated, and give them the mentorship they need to grow in their careers.</li>\n</ul>\n<h3 id=\"foster-relationships-and-collaboration-with-cross-functional-partners\">Foster relationships and collaboration with cross functional partners</h3>\n<ul>\n<li>As Head of UX Research, collaboration is key. You\u2019ll build strong partnerships with your peers in Product, Design, Engineering, and Data, and you will work with peers in market research, commercial research, consumer revenue, audience development, analytics, custom insights, and experimentation to provide a holistic understanding of our global audiences.</li>\n</ul>\n<h3 id=\"manage-research-operations\">Manage research operations</h3>\n<ul>\n<li>The UX Research team uses a variety of tools, vendors, and platforms to recruit participants, conduct research with them, and then compensate them. As Head of UX Research, you will manage these tools, with support from our Design Ops team, while ensuring that we follow best privacy and accessibility practices.</li>\n</ul>\n<h2 id=\"who-you-are\">Who you are</h2>\n<ul>\n<li>Extensive experience in applied research, ideally including some experience working closely with design and product organizations </li>\n<li>Experience with a wide range of research methodologies and a thorough knowledge of when to use what approach </li>\n<li>Experience managing other researchers and acting as a leader and mentor </li>\n<li>Experience leading, collaborating, and influencing design and product management teams with and without formal authority</li>\n</ul>\n<h2 id=\"it-would-be-a-bonus-to-have\">It would be a bonus to have...</h2>\n<ul>\n<li>Experience managing researchers or a team of researchers </li>\n<li>Experience with global research projects or multi-market research studies </li>\n<li>Knowledge of online technology and related products, including web and mobile UI and tools</li>\n<li>Familiarity with user experience design and/or writing principles and practices and how to use data to provide informed user insights</li>\n<li>Proven skills as a self-starter who can manage projects in a fast-paced environment and remain focused amidst frequently changing requirements.</li>\n<li>Experience working in matrixed organisations with distributed teams across multiple time zones</li>\n<li>Experience in media and/or publishing a plus</li>\n</ul>\n<h2 id=\"where-will-you-be\">Where will you be?</h2>\n<ul>\n<li>We encourage hybrid working but when you are in the office, this role will be primarily based in the wonderful Adelphi building with breathtaking views over the Thames and next to the hustle and bustle of The Strand. This is our London HQ and where members of our global teams sit enabling all of our award-winning content to be created.</li>\n</ul>\n<h2 id=\"what-benefits-do-we-offer\">What benefits do we offer?</h2>\n<ul>\n<li>Cond\u00e9 Nast Learning Hub where you\u2019ll find you\u2019ll find all Cond\u00e9 Nast-developed learning courses and trainings, and over 16,000+ courses in seven local languages </li>\n<li>25 days holiday and extra days of annual leave for if you get married, move house or want to volunteer </li>\n<li>Hybrid working and core hours </li>\n<li>Competitive pension scheme </li>\n<li>Bupa Private Healthcare </li>\n<li>Season ticket loans </li>\n<li>Cycle to work </li>\n<li>Employee Assistance programme </li>\n<li>Bring your dog to work </li>\n<li>A wide variety of wellness benefits including gym discounts </li>\n<li>Discounts and Magazine Subscriptions</li>\n<li>Employee Resource Groups to provide a platform for employees to identify shared objectives, exchange ideas, and work on community priorities for our global workforce</li>\n</ul>\n<h2 id=\"what-happens-next\">What happens next?</h2>\n<p>If you are interested in this opportunity, please apply below, and we will review your application as soon as possible. You can update your resume or upload a cover letter at any time by accessing your candidate profile.</p>\n<p><em>Cond\u00e9 Nast is an equal opportunity employer. We evaluate qualified applicants without regard to race, color, religion, sex, sexual orientation, gender identity, national origin, disability, veteran status, age, familial status and other legally protected characteristics.</em>   </p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1109, "index": "1109", "job_title": "UX Research Intern (Summer 2023)", "employer": "Ripple", "publish": "TRUE", "publication_date": "Wed, 18 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://ripple.com/careers/all-jobs/job/4811750", "job_id": "azlkhd71", "logo_link": "/jobs/logos/Ripple_logo_PNG1.png", "location": "London, Remote", "apply_by_date": "", "work_pat": "", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://ripple.com/careers/all-jobs/job/4811750", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<p><em>This role is open to candidates in San Francisco, New York, Miami, London, Singapore and Toronto</em></p>\n<p>Ripple is transforming the world of finance with innovative crypto solutions that increase access to financial services to people around the world.  As a UX Research Intern, you will be conducting user research, synthesizing data, and presenting findings to various teams. You will be working collaboratively with teams to plan, execute, and present your research. </p>\n<p>We are looking for a hardworking and motivated individual who is passionate about advocating and empathizing for users. You will work closely with the Product Design and UX Research team and get the chance to apply your knowledge of user research in surfacing qualitative and quantitative insights that will influence the company.</p>\n<h2 id=\"what-youll-do\">What you&#39;ll do</h2>\n<ul>\n<li>Conduct qualitative and/or quantitative research to identify opportunities that are valuable and actionable to advise product, design, and/or marketing strategies</li>\n<li>Partner closely with Product Designers, Product Managers, and other team members, with guidance and support from other ux researchers to plan and gather insights, ensuring team engagement and collaboration throughout the process</li>\n<li>Run usability tests of new design concepts, design flows and will partner with Product Design to plan, execute, and share insights </li>\n<li>Learn about and advocate for users through interviews and/or surveys to further improve the overall user experience by understanding their needs, motivations, and behaviors</li>\n</ul>\n<h2 id=\"what-we-are-looking-for\">What we are looking for</h2>\n<ul>\n<li>Is currently enrolled in a Master&#39;s program in Human-Computer Interaction, Human Factors, Cognitive Psychology, Anthropology, or a related field; and is expected to graduate in May 2024</li>\n<li>Has at least 2 years of relevant work experience in user research, UX research, or related roles</li>\n<li>Is familiar with basic research methodologies</li>\n<li>Is detail-oriented and able to work independently on a variety of tasks</li>\n<li>Can prioritize projects and is adaptable to changing schedules </li>\n<li>Has a deep desire to apply research toward expanding what is possible and improving the world</li>\n<li>Is technically savvy; can learn new tools and software quickly</li>\n<li>Is empathetic and curious; a great listener with an uncanny ability to disarm people and learn unknown facts about them</li>\n<li>Has excellent verbal and written communication; values over-communication while collaborating with remote coworkers located in different time zones</li>\n</ul>\n<h2 id=\"bonus-points\">Bonus points</h2>\n<ul>\n<li>A FinTech experience, specifically on payments</li>\n<li>A passion for crypto and blockchain technology</li>\n<li>Has international research experience</li>\n</ul>\n<p>For positions that will be based in CA, the annual salary range for this position is $40 - $50. Actual salaries may vary based on numerous factors including, among other things, an individual applicant\u2019s experience and qualifications for the position.</p>\n<p>#LI-DNI</p>\n<h2 id=\"who-we-are\">Who we are</h2>\n<p>Ripple is doing for value what the internet did for information: enabling its instant and seamless flow around the world. We call this the Internet of Value (IoV). Using blockchain and cryptocurrency technology, Ripple is dedicated to creating powerful gains in financial efficiency, equity and inclusion. In addition, Ripple is developing and enabling the future use cases that will catalyze the new digital economy for governments, businesses and consumers.</p>\n<p>Ripple has offices in San Francisco (HQ), New York, London, Mumbai, Singapore, S\u00e3o Paulo, Toronto, Reykjav\u00edk, Washington D.C. and Dubai.</p>\n<h2 id=\"what-we-offer--the-resources-and-support-to-be-your-best-at-work-and-beyond\">What we offer \u2013 The resources and support to be your best at work and beyond</h2>\n<h3 id=\"do-your-best-work\">Do Your Best Work</h3>\n<ul>\n<li>The opportunity to build in a fast-paced start-up environment with experienced industry leaders</li>\n<li>A learning environment where you can dive deep into the latest technologies and make an impact.  A professional development budget to support other modes of learning.</li>\n<li>Thrive in an environment where no matter what race, ethnicity, gender, origin, or culture they identify with, every employee is a respected, valued, and empowered part of the team.</li>\n<li>Ripple is Flexible First: you have the option to work remotely, from our offices, or a combination of the two within the 11 countries we are located around the world.</li>\n<li>Weekly all-company meeting - business updates and ask me anything style discussion with our Leadership Team</li>\n<li>We come together for moments that matter which include team off-sites, team bonding activities, happy hours and more!</li>\n</ul>\n<h3 id=\"take-control-of-your-finances\">Take Control of Your Finances</h3>\n<ul>\n<li>Competitive salary, bonuses, and equity</li>\n<li>Bonus Flexibility Program: Participants in the Corporate Bonus Plan have the option to elect to receive their annual bonus in cash, equity or XRP, or a combination.</li>\n<li>100% paid medical and dental and 95% paid vision insurance for employees starting on your first day</li>\n<li>401k (with match) </li>\n<li>Commuter benefits</li>\n<li>Employee giving match</li>\n<li>Mobile phone stipend</li>\n</ul>\n<h3 id=\"take-care-of-yourself\">Take Care of Yourself</h3>\n<ul>\n<li>Twice a quarter R&amp;R days so you can rest and recharge</li>\n<li>Generous wellness reimbursement and weekly onsite &amp; virtual programming</li>\n<li>Flexible vacation policy - work with your manager to take time off when you need it</li>\n<li>Industry-leading parental leave policies. Family planning benefits.</li>\n<li>Catered lunches, fully-stocked kitchens with premium snacks/beverages, and plenty of fun events</li>\n</ul>\n<p><em>Benefits listed above are for full-time employees.</em></p>\n<p><em>Ripple is an Equal Opportunity Employer. We\u2019re committed to building a diverse and inclusive team. We do not discriminate against qualified employees or applicants because of race, color, religion, gender identity, sex, sexual identity, pregnancy, national origin, ancestry, citizenship, age, marital status, physical disability, mental disability, medical condition, military status, or any other characteristic protected by local law or ordinance.</em></p>\n<p><em>Please find our <a href=\"https://ripple.com/eu-applicant-privacy-notice/\">UK/EU Applicant Privacy Notice</a> and our <a href=\"https://ripple.com/ca-applicant-privacy-notice/\">California Applicant Privacy Notice</a> for reference.</em></p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1110, "index": "1110", "job_title": "Product Designer, Streaming", "employer": "TIDAL", "publish": "TRUE", "publication_date": "Sat, 21 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://jobs.smartrecruiters.com/Square/743999879846283-product-designer-streaming-tidal", "job_id": "pauuye39", "logo_link": "/jobs/logos/tidal-vector-logo.svg", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://jobs.smartrecruiters.com/oneclick-ui/company/Square/publication/dc7cce3e-60be-49fe-8841-7e8bbe70e99f?dcr_ci=Square", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<h2 id=\"company-description\">Company Description</h2>\n<p>TIDAL is a global music and entertainment streaming platform committed to creating a deeper connection between artists and fans through its library of more than 80 million songs, over 350,000 high quality videos, and available in over 60 countries. In addition, TIDAL offers its subscribers exclusive access to high-profile music and music videos, original content series, podcasts, documentaries, livestream concerts, tickets, merchandise and live experiences. Together, TIDAL and Block will be music-obsessed and artist-focused while we explore new artist tools, listener experiences, and access to financial systems that help artists be more successful.</p>\n<h2 id=\"job-description\">Job Description</h2>\n<p>At TIDAL we focus on creating great products, services, and customer experiences. Product designers will bring ideas to the table, work with precision under tight timeframes, and translate product concepts and specifications into pixel perfect designs. The role needs to have an eye for elegance and simplicity, and should be driven by a mission to create the best user experience for millions of users worldwide. </p>\n<p>The role will be a part of the Product Design team who manage UI &amp; UX production across all our applications. We focus on optimisation and new ideas in order for us to provide a great-looking and user-friendly product for our users. The product designers work closely together with the product managers on documentation and exploration and they are a key support unit for the development teams.</p>\n<h2 id=\"you-will\">You Will</h2>\n<ul>\n<li>Help shape the product vision.</li>\n<li>Look for opportunities to solve problems in unique and creative ways</li>\n<li>Create visual concepts with journey maps based on product specifications</li>\n<li>Build functional prototypes to validate your designs</li>\n<li>Participate in user research and testing</li>\n<li>Help maintain visual and brand consistency between all products and outlets</li>\n<li>Produce pixel-perfect design with clear design specifications for our mobile applications</li>\n<li>Work together with the Product Managers &amp; Development teams to determine the best implementation</li>\n<li>Support our Development teams during development stages</li>\n<li>Communicate product design items to relevant stakeholders across the company</li>\n</ul>\n<h2 id=\"qualifications\">Qualifications</h2>\n<ul>\n<li>5+ years of product design experience or related/equivalent experience, </li>\n<li>A strong visual portfolio showcasing previous work</li>\n<li>Ability to communicate design concepts through sketches and wireframes</li>\n<li>Experience with Figma, Sketch, and/or other design tools</li>\n<li>Experience with prototyping tools</li>\n<li>Understanding of design principles and knowledge of different platforms</li>\n<li>Experience building design systems</li>\n<li>Knows how to communicate ideas to a large range of stakeholders</li>\n<li>Loves working in a team, but can also work independently when required</li>\n<li>Can effectively communicate, collaborate, and think with other Designers</li>\n<li>Open to, and believes in the importance of feedback</li>\n</ul>\n<h2 id=\"additional-information\">Additional Information</h2>\n<p>Please note, remote work is available from US, Germany, Norway, Spain, Poland, UK and Netherlands. In other cases relocation is needed to one of the mentioned countries.</p>\n<p>We\u2019re working to build a more inclusive economy where our customers have equal access to opportunity, and we strive to live by these same values in building our workplace. Block is a proud equal opportunity employer. We work hard to evaluate all employees and job applicants consistently, based solely on the core competencies required of the role at hand, and without regard to any legally protected class.</p>\n<p>We believe in being fair, and are committed to an inclusive interview experience, including providing reasonable accommodations to disabled applicants throughout the recruitment process. We encourage applicants to share any needed accommodations with their recruiter, who will treat these requests as confidentially as possible. **Want to learn more about what we\u2019re doing to build a workplace that is fair and square? Check out our <a href=\"https://squareup.com/us/en/about/diversity?utm_source=job_description\">I+D page</a>. **</p>\n<p><em>Block, Inc. (NYSE: SQ) is a global technology company with a focus on financial services. Made up of Square, Cash App, Spiral, TIDAL, and TBD, we build tools to help more people access the economy. Square helps sellers run and grow their businesses with its integrated ecosystem of commerce solutions, business software, and banking services. With Cash App, anyone can easily send, spend, or invest their money in stocks or Bitcoin. Spiral (formerly Square Crypto) builds and funds free, open-source Bitcoin projects. Artists use TIDAL to help them succeed as entrepreneurs and connect more deeply with fans. TBD is building an open developer platform to make it easier to access Bitcoin and other blockchain technologies without having to go through an institution.</em></p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1111, "index": "1111", "job_title": "UI/UX Director", "employer": "Gram Games", "publish": "TRUE", "publication_date": "Sat, 21 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://apply.workable.com/gram-games/j/72F9D8AC8E/", "job_id": "siihtq92", "logo_link": "/jobs/logos/Gram-Games.png", "location": "London, Remote", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://apply.workable.com/gram-games/j/72F9D8AC8E/apply/", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<p><strong>This role can be based in any of the following locations: London/Istanbul/Remote USA or Canada</strong></p>\n<p>Gram Games is the studio behind some of the most popular mobile titles like 1010!, Merge Dragons &amp; Merge Magic and we have more awesome projects in the pipeline. We do things differently here: we work in small self-managing teams, enabling you to have an incredible amount of ownership, autonomy and impact. We&#39;ll never ask you to abandon your craft to focus on managing others or your workload.</p>\n<p>As the UX/UI Director we are seeking for you to lead and mentor a growing team of varied UX skill sets, helping to improve processes and achieve excellence across multiple concurrent projects.</p>\n<p>While the core of the job is around team leadership and strategy, another key part of the role is around collaboration with a wide variety of disciplines and expertise. You will collaborate with other Directors, Art Leadership, Design Leadership, and many other disciplines as you build toward a great UX culture.</p>\n<h2 id=\"responsibilities\">Responsibilities</h2>\n<ul>\n<li>Build the recruitment strategy for the UX/UI discipline, including role definition, interviewing structure, hiring, onboarding and succession planning</li>\n<li>Drive the delivery and quality of the UX/UI across the business, mentoring and supporting leads, designers, artists, and technical designers</li>\n<li>Help and Assist Artists, Designers, and other members of the team to achieve visual excellence across a variety of visual styles, giving feedback and helping to improve the process</li>\n<li>A recognized expert in the discipline. Known for invention, innovation and talent. Identifies future opportunities and strategies. Has shipped multiple products</li>\n<li>Lead all feedback sessions within multiple discipline groups. Helping sets direction for UX team</li>\n</ul>\n<h2 id=\"required-skills--experience\">Required Skills &amp; Experience</h2>\n<ul>\n<li>An experienced UX/UI Director with mobile games experience under your belt</li>\n<li>Experience leading a game through all stages of the project lifecycle</li>\n<li>Experience building the UX branding for a game in conjunction with the team</li>\n<li>Experience in UX/UI Design (interaction design, prototyping, accessibility, and user research)</li>\n<li>A passion for making and playing games</li>\n</ul>\n<h2 id=\"benefits\">Benefits</h2>\n<ul>\n<li>In return for bringing your expertise to this top-priority role, we can offer some of the best benefits in the Games industry!</li>\n<li>Highly competitive salary</li>\n<li>Private medical care</li>\n<li>Awesome onsite chef serving breakfast, lunch, and lots of treats (naughty and nice)</li>\n<li>Relocation assistance for those moving</li>\n<li>Life insurance and a favourable pension scheme</li>\n<li>Healthcare cash plan including dental and optical coverage</li>\n<li>Amazing tech to work with and consoles to play and relax with everywhere you look!</li>\n</ul>\n<p>Gram Games collects and processes personal data in accordance with applicable data protection laws.If you are a European Job Applicant see the <a href=\"https://apply.workable.com/gram-games/gdpr_policy?lng=en\">privacy notice</a> for further details.</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1112, "index": "1112", "job_title": "UX Designer", "employer": "Vanquis", "publish": "TRUE", "publication_date": "Sat, 21 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "20 Feb", "original_job_description": "https://vanquisbank.current-vacancies.com/Jobs/Advert/2978910?cid=1804&rsid=0&js=0&LinkType=1&FromSearch=False", "job_id": "othhgf81", "logo_link": "/jobs/logos/vanquis-bank-logo.png", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://vanquisbank.current-vacancies.com/Jobs/Advert/2978910?cid=1804&rsid=0&js=0&LinkType=1&FromSearch=False", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<h2 id=\"who-we-are\">Who we are</h2>\n<p>Vanquis helps people who are excluded by mainstream banks take control of their financial situation. Whether they\u2019re new to credit or need a hand rebuilding their credit file to manage life better, we make sure our services are straightforward and suitable for them to succeed.</p>\n<p>We\u2019re here to put people on a path to a better everyday life, not just our 1.7 million customers but our colleagues too. And we\u2019re proud of the difference we make.</p>\n<p>PFG is a unified group made up of Vanquis (cards and loans) and Moneybarn (vehicle finance). While they all offer different products and services, they each share the common purpose and customer-centric values at the heart of our group. We understand our customers are real people with real and varied life experiences, so everything we do from our products to our customer experience is designed with this in mind. </p>\n<h2 id=\"you-and-your-team\">You and your team</h2>\n<p>As UX Designer you will be responsible for ensuring our customers experience high-quality products across all our digital channels. You will work with the UX &amp; Digital Design Team, part of the new Digital Transformation Team, and wider business stakeholders to design, develop, test, and release digital experiences that actively help our customers to understand and manage their accounts.</p>\n<p>Your day to day duties will include (but won\u2019t be limited too):</p>\n<ul>\n<li>Working with designers and product owners to create and iterate upon design processes to ensure we deliver great experiences and better products.</li>\n<li>Working with our UX Researcher and our customers directly to grow our understanding of who our customers are and what they need.</li>\n<li>Working within our Financial Regulatory framework and be a customer champion and advocate, putting the customer first at every point.</li>\n<li>Using rapid prototyping to test the usability of your designs and interactions. Responsible for iterating quickly and being an advocate for great design.</li>\n<li>Usage of tools like Figma, and Zeplin, Framer, Principle, or similar, to deliver low and high fidelity prototypes and designs</li>\n<li>Working with our design team to help disrupt the current ways of thinking within the organisation \u2013 helping to showcase the power of customer-centric design thinking.</li>\n<li>Working with the Digital Team and key stakeholders (Customer, Brand and Product teams) to understand the needs and wants of our customers.</li>\n<li>Working with a blend of commercial, customer, operations and technical colleagues, design and build interactive prototypes to improve the overall user experience</li>\n<li>Being able to articulate design decisions to the business and empathise with their feedback.</li>\n</ul>\n<h2 id=\"what-you-bring-to-the-team\">What you bring to the Team</h2>\n<p>We are seeking someone with demonstratable experience as a UX designer, having worked in digital design and live projects. We are looking for someone creative, who is a team player and really thrives in a creative and engaging environment, who wants to be part of an energetic team. This role will report to the UX and Digital Design lead and will receive support where required from a Senior UX designer. They will have the opportunity to work on apps, websites, content, push notifications, chat bots, and others.</p>\n<ul>\n<li>Demonstrable experience as a UX and/or UI Designer having worked in digital design with live projects.</li>\n<li>Experience of UX best practices &amp; design trends, and an extensive portfolio to back it up.</li>\n<li>Experience of working on digital user experience design, with a solid portfolio of work you\u2019ll be able to confidently talk through. </li>\n<li>Experience of creating user journey maps, wireframes, and clickable prototypes. And of working with UI designers to create test-ready designs. </li>\n<li>Experience of testing everything from concepts to fully realised on-device designs to derive hidden insights about our customers, and then using these insights to generate new hypotheses to test. </li>\n<li>Experience in utilising evidenced user needs to influence senior stakeholders and acting as a persuasive advocate for those needs. </li>\n<li>Experience with designing taxonomies, ontologies, information architecture, and content hierarchies. </li>\n<li>Ability to use digital design tools and experience with using object-oriented design systems. </li>\n<li>Meticulous attention to detail.</li>\n<li>You have experience working in a team that includes developers, designers, copywriters, and product owners.</li>\n</ul>\n<h2 id=\"working-conditions\">Working Conditions</h2>\n<p>This position is working 37.5 hours per week and can be based close to any of our offices (Bradford, London, Petersfield or Chatham) on a hybrid basis.</p>\n<h2 id=\"why-vanquis\">Why Vanquis?</h2>\n<p>Our colleagues are the most important part of delivering our purpose to put customers on a path to a better everyday life. If it wasn\u2019t for their amazing efforts, ideas and energy we wouldn\u2019t be the successful business that we are today. So we offer an attractive, competitive salary and benefits package for everyone including:</p>\n<ul>\n<li>Competitive base salary and rewards</li>\n<li>Discretionary bonus scheme</li>\n<li>25 days holiday entitlement \u2013 with one day accrued for each year of service (to max 30 days)</li>\n<li>Defined contribution pension scheme</li>\n<li>Extensive opportunities for personal and career development</li>\n<li>Flexible and dynamic working policies</li>\n<li>A range of initiatives offered through our Sports &amp; Social and  Social Impact Programmes</li>\n<li>Perks at Work - A perks platform offering over 30,000 unique discounts</li>\n<li>Free tea, coffee and fruit</li>\n<li>Discounted gym membership</li>\n<li>Subsidised on-site restaurants</li>\n</ul>\n<h2 id=\"find-out-more\">Find out more</h2>\n<p>Check out our social media channels find out more about everyday life at Vanquis \u2013 and don\u2019t forget to follow us while you\u2019re there!</p>\n<p>LinkedIn: <a href=\"https://www.linkedin.com/company\">Vanquis Bank</a>\nFacebook: <a href=\"https://www.facebook.com/vanquiscareers\">Vanquis Careers</a>\nGlassdoor: <a href=\"https://www.glassdoor.co.uk/Overview/Working-at-Vanquis-Bank-EI_IE721779.11,23.htm\">Vanquis Bank</a></p>\n<p>Good luck!</p>\n<p>#MakeWorkMeanMore</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1114, "index": "1114", "job_title": "Lead, Product Experience Designer", "employer": "Mastercard", "publish": "TRUE", "publication_date": "Mon, 23 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://mastercard.wd1.myworkdayjobs.com/en-US/CorporateCareers/job/London-England-Angel-Lane/Lead--Product-Experience-Designer_R-189146-1", "job_id": "aiedh20", "logo_link": "/jobs/logos/Mastercard-logo.svg", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://mastercard.wd1.myworkdayjobs.com/en-US/CorporateCareers/job/London-England-Angel-Lane/Lead--Product-Experience-Designer_R-189146-1", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<h2 id=\"our-purpose\">Our Purpose</h2>\n<p>We work to connect and power an inclusive, digital economy that benefits everyone, everywhere by making transactions safe, simple, smart and accessible. Using secure data and networks, partnerships and passion, our innovations and solutions help individuals, financial institutions, governments and businesses realize their greatest potential. Our decency quotient, or DQ, drives our culture and everything we do inside and outside of our company. We cultivate a <a href=\"https://www.mastercard.us/en-us/vision/who-we-are/diversity-inclusion.html\">culture of inclusion</a> for all employees that respects their individual strengths, views, and experiences. We believe that our differences enable us to be a better team \u2013 one that makes better decisions, drives innovation and delivers better business results. </p>\n<h2 id=\"who-is-mastercard\">Who is Mastercard?</h2>\n<p>Mastercard is a global technology company in the payments industry. Our mission is to connect and power an inclusive, digital economy that benefits everyone, everywhere by making transactions safe, simple, smart, and accessible. Using secure data and networks, partnerships and passion, our innovations and solutions help individuals, financial institutions, governments, and businesses realize their greatest potential.</p>\n<p>Our decency quotient, or DQ, drives our culture and everything we do inside and outside of our company. With connections across more than 210 countries and territories, we are building a sustainable world that unlocks priceless possibilities for all.</p>\n<h2 id=\"overview\">Overview</h2>\n<p>As a Product Experience Designer at Vocalink you will be responsible for the customer experience of a new iteration of one of the world\u2019s leading B2B payment infrastructure solutions. This role would be working on the UX for multiple projects intended to form part of the national banking infrastructure for numerous countries worldwide. As part of a cross-disciplinary agile team you will be working alongside Product Managers, Product Owners and within a wider CX &amp; Design team in a highly collaborative environment. </p>\n<p>The ideal candidate will be a methodical and thorough UX designer who also has solid research skills. The candidate is required to have demonstrable experience conducting user research/usability testing along with the ability to run workshops, create detailed prototypes, journey maps and other deliverables to help communicate their ideas. They will be working collaboratively with a Lead UX researcher to deliver user research/usability testing and apply insights. They will need to be able to quickly get to grips with complex requirements and payments jargon to understand how best to simplify the user journey for our customers.</p>\n<p>This role may also be involved in other projects from time to time, helping facilitate workshops, planning / executing user research projects in new markets, or building prototypes to demonstrate innovative new payment technologies.</p>\n<h2 id=\"role\">Role</h2>\n<ul>\n<li>Providing UX expertise within an agile product team </li>\n<li>Empathise with B2B customers problems and leverage user research to capture and understand real-world user needs</li>\n<li>An inquisitive, natural problem solver with the ability to find simple solutions to complex problems</li>\n<li>Provide support to other team members and work in a highly collaborative way within our UX team </li>\n<li>Advocate of user centred design, understands the importance of qualitative and quantitative research</li>\n<li>Participating in regular design critiques with the team</li>\n<li>Work closely with BAs, developers and the product owner promoting the needs of the user</li>\n</ul>\n<h2 id=\"all-about-you\">All About You</h2>\n<p>We\u2019re looking for someone with the following skills, knowledge and experience: </p>\n<ul>\n<li>Commercial experience in User Experience Design </li>\n<li>Proven experience delivering a high standard of output in fast paced, enterprise organisations</li>\n<li>Experience working in a Lean / Agile methodology </li>\n<li>Collaborative and pragmatic approach to their work </li>\n<li>Experience communicating with diverse stakeholders </li>\n<li>Advanced skills in tools such as Axure, Sketch, Invision, Figma</li>\n</ul>\n<h2 id=\"corporate-security-responsibility\">Corporate Security Responsibility</h2>\n<p>All activities involving access to Mastercard assets, information, and networks comes with an inherent risk to the organization and, therefore, it is expected that every person working for, or on behalf of, Mastercard is responsible for information security and must:</p>\n<ul>\n<li>Abide by Mastercard\u2019s security policies and practices;</li>\n<li>Ensure the confidentiality and integrity of the information being accessed;</li>\n<li>Report any suspected information security violation or breach, and</li>\n<li>Complete all periodic mandatory security trainings in accordance with Mastercard\u2019s guidelines.</li>\n</ul>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1116, "index": "1116", "job_title": "Associate UX Researcher", "employer": "Wayflyer", "publish": "TRUE", "publication_date": "Mon, 23 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://jobs.lever.co/wayflyer/278f8e66-6079-4df8-b21a-c02605aa537e", "job_id": "jdgteu98", "logo_link": "/jobs/logos/Wayflyer.svg", "location": "London, Remote", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://jobs.lever.co/wayflyer/278f8e66-6079-4df8-b21a-c02605aa537e/apply", "paid_ad": "", "accepting_applications": "24 Jan", "extended_description": "<p>We\u2019re looking for an Associate UX Researcher to help Wayflyer become a better informed and more empathetic organisation.</p>\n<p>You\u2019ll be joining a newly established research team at Wayflyer, helping people <a href=\"https://www.wayflyer.com/our-values\">think founder first</a> to build great products by putting who uses them at the heart of our design.</p>\n<p>Our products will be better and genuinely useful, solving real problems for real users, thanks to your work.</p>\n<p>As you read this ad, if you think you tick a lot of the boxes, but not all of them, please apply anyway, especially if you\u2019re a woman or were raised in a culture that makes you underplay your achievements.</p>\n<h2 id=\"what-youll-do\">What you\u2019ll do</h2>\n<p>As an associate researcher, you\u2019ll plan, design and do the work to get robust and reliable evidence about what makes our customers tick \u2014 how they do it, why they do it, what they do, what would help them do more and do it better \u2014 and share this information in a way that&#39;s easily accessible and applicable to our work.</p>\n<p>You\u2019ll provide hands-on support to designers, as well as help set out the longer-term vision. Your work will shape our products and services (generative research) and build confidence that we are building highly usable and useful products (evaluative research).</p>\n<p>You\u2019ll work across multiple teams and make sure we have a well-rounded, comprehensive understanding of our customers and users. This means that you&#39;ll get to work on a wide range of projects, often at different stages of product development and with different types of users.</p>\n<p>As an associate, you\u2019re at the early part of your career in research, so we\u2019ll make sure you\u2019ll have the support and guidance of more experienced research and design teammates, to help you develop your research expertise.</p>\n<h2 id=\"to-be-more-specific-youll\">To be more specific, you\u2019ll</h2>\n<ul>\n<li>offer helping hands to our growing team, supporting a range of projects under the guidance of more experienced designers and researchers: everything from note-taking during interviews, to video editing, to building and refining journey maps and service blueprints, to populating content for reports.</li>\n<li>supplement primary research data with secondary sources wherever possible, including quantitative data.</li>\n<li>lead largely independently on secondary analyses of customer data and insight as part of smaller-scope projects which you&#39;ll own and drive.</li>\n<li>partner with product designers in usability testing of prototypes, leading on script writing, analysis and reporting, developing a specialism in remote unmoderated testing.</li>\n<li>help to build and maintain a library of insights to make sure that understanding of our users is readily available, up-to-date and accessible to all.</li>\n<li>help recruit of research participants.</li>\n</ul>\n<h2 id=\"heres-what-we-see-you-doing-in-your-first-90-days-with-wayflyer\">Here\u2019s what we see you doing in your first 90 days with Wayflyer</h2>\n<ul>\n<li>Interview users to support the work to create a service blueprint for the \u2018get funded\u2019 journey.</li>\n<li>Support the work on customer segmentation to develop personas that describe Enterprise, Standard and Express customers in more detail, focusing on their needs and behaviours.</li>\n<li>Speak with customers to support the work to create an experience map for the as-is \u2018get funded\u2019 journey for key personas.</li>\n<li>Look for ways we might find a group of customers to give us regular feedback on our product and marketing designs.</li>\n</ul>\n<h2 id=\"youll-be-at-the-start-of-your-career-as-a-design-researcher-and-want-to-learn-the-foundations-of-research-from-the-ground-up-so-youll-be\">You\u2019ll be at the start of your career as a design researcher and want to learn the foundations of research from the ground up. So you\u2019ll be</h2>\n<ul>\n<li>keen to learn from an experienced team of design practitioners who&#39;ll act as role models and mentors</li>\n<li>a supportive team player who thrives on making a difference, no matter how big or small</li>\n<li>attentive to detail with high standards for written content and presentations</li>\n<li>able to show an awareness of the need for careful analysis of research data and insights, and the ability to produce clear findings</li>\n<li>able to articulate the differences in the types of people who user Wayflyer\u2019s products and services, and aware of their diversity</li>\n<li>able to show you understand different user research methods, suggesting project-appropriate methods with growing confidence</li>\n<li>able to show you understand how to design and align your work with longer-term team goals.</li>\n<li>able to show you understand user-centred approaches and their role in product or service design.</li>\n</ul>\n<h2 id=\"why-join-the-research--design-team-at-wayflyer\">Why join the Research &amp; Design team at Wayflyer?</h2>\n<p>When we hire someone, we hire them for being them. Their experience and skills, of course \u2013 but also who they are and how they treat people. There\u2019s a reason why \u2018Be sound\u2019 is one of our <a href=\"https://www.wayflyer.com/our-values\">core values</a>.</p>\n<p>We\u2019d rather not err at all, but when we do, we err on the side of being kind \u2013 being kind to ourselves and to other people.</p>\n<p>What that means is we respect each other as more than simply work colleagues \u2013 we recognise people have lives outside of work and sometimes the two worlds collide. That might be you needing to do the school run every morning and starting your working day later; you might need to bring your dog to the office and all your meetings because no one is at home to look after her; your brain might be an unproductive, sleepy mush after a night of looking after a poorly child; or you might not be able to attend an in-person event because you haven\u2019t been able to arrange childcare support. All of these are real life examples from the Research &amp; Design team. None of these are career-limiting events. All of these were worked around with no effect on quality of work.</p>\n<p>Yes, we\u2019re ambitious and we set challenging goals. But not at the expense of our personal lives or what matters to us as humans.</p>\n<p>You should never feel the need to put on an act or hide parts of yourself. We truly want you to bring your whole self to work and we work hard to create the safe space for people to do that.</p>\n<h2 id=\"what-happens-next\">What happens next?</h2>\n<p>We want to hear from you even if you think you\u2019re not a 100% fit, especially if you consciously or unconsciously normally shy away from celebrating your achievements.</p>\n<p>We\u2019ll review and respond to every application we receive. If we\u2019re interested in taking your application further, someone from our Talent Acquisition team will be in touch to find out more about you, what you\u2019re looking for. They\u2019ll also share more information about the full interview process.</p>\n<h2 id=\"about-wayflyer\">About Wayflyer</h2>\n<p>Our mission is to empower eCommerce stores to unlock their full potential. Join us!</p>\n<p>Wayflyer is revolutionising the eCommerce space by levelling the playing field for eCommerce founders across the world. Unlocking and fuelling their growth through solving their two biggest pain-points: funding and insights.</p>\n<p>We use data to solve both of these challenges, empowering store owners with insights on how best to acquire customers online and providing them with short-term financing to scale and unlock their store&#39;s full potential.</p>\n<p>We\u2019re a fast-growing, venture-backed startup that serves a critical need for eCommerce entrepreneurs. You&#39;ll be joining a hyper-growth, ambitious, collaborative team that&#39;s working on a huge opportunity.</p>\n<p>We have countless opportunities as we launch new markets and game-changing products and need teammates that love having high impact in a fast-moving and ambitious company.</p>\n<p>Since launching in April 2020, we\u2019ve deployed over <a href=\"http://1.4b/\">$1.4b</a> in funding across 8 countries to 2000+ eCommerce founders. In 2021 alone, the amount of funding we deployed to customers grew by 900%.</p>\n<p>We <a href=\"https://techcrunch.com/2022/02/01/wayflyer-raises-150m-on-a-1-6b-valuation-for-a-new-spin-on-providing-finance-to-e-commerce-merchants/\">recently announced our Series B</a>, raising $150m in funding at <a href=\"http://1.6bn/\">$1.6bn</a> valuation; backed by world-leading VCs including Left Lane Capital and DST Global and secured $500+ million debt financing via Credit Suisse &amp; JP Morgan.</p>\n<p>There are 300+ of us globally, split between our offices in Atlanta, Dublin, London and Sydney.</p>\n<p>Here\u2019s more info from <a href=\"https://www.wayflyer.com/blog/series-b\">our founder</a> and you can learn more about <a href=\"https://wayflyer.info/3GfCKpO\">our culture</a> here.</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1117, "index": "1117", "job_title": "UX Designer", "employer": "Thomson Reuters", "publish": "TRUE", "publication_date": "Wed, 25 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://jobs.thomsonreuters.com/job/17676126/ux-designer-london-gb", "job_id": "fftwo92", "logo_link": "/jobs/logos/Thomson_Reuters_logo.svg", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://thomsonreuters.wd5.myworkdayjobs.com/External_Career_Site/login?redirect=%2FExternal_Career_Site%2Fjob%2FGBR-London-5-Canada-Square%2FUX-Designer_JREQ165621%2Fapply", "paid_ad": "", "accepting_applications": "25 Jan", "extended_description": "<h2 id=\"about-this-position\">About this position</h2>\n<p>Working at Thomson Reuters\nDo you love collaborating with technical experts to solve complex problems for customers?</p>\n<p>We are currently seeking a curious and empathic UX Designer with a demonstrable history of bringing design thinking insight to deliver compelling user experiences. </p>\n<p>The role sits within the Product organization responsible for the content production and customer experience driving the world&#39;s most trusted news organization, Reuters News.</p>\n<p>As a UX Designer you will work in an agile environment as part of a global cross-functional team including engineering and product owners, as well as users and senior stakeholders across the business.</p>\n<p>Your primary role will be to understand user needs and build user-centered design workflows, prototypes and associated deliverables for our assets across our product portfolio, focusing on key Content Production tools powering the global newsroom, the new Reuters.com site, and our core B2B customer products.</p>\n<h2 id=\"about-the-role\">About the role</h2>\n<p>As a UX Designer you will:</p>\n<ul>\n<li>Work with a global multi-disciplinary team. Partner closely with engineering, product and the business to find elegant but practical solutions to design challenges</li>\n<li>With support of the wider Reuters Product and Engineering teams, consider the wider customer and colleague experiences across the digital ecosystem to ensure we are designing a joined-up experience</li>\n<li>Deliver design prototypes to convince stakeholders and business partners. Solve problems collaboratively and present solutions that delight our users</li>\n<li>Leverage a range of inputs, including interaction, brand principles, analytics, customer feedback, usability testing, technology and business requirements to develop informed and logical solutions</li>\n<li>Test and evolve your proposed designs with customers and colleagues using a range of user research tools and techniques</li>\n<li>Be able to clearly communicate your ideas and rationale to stakeholders and product teams alike</li>\n<li>Create user-centric, accessible user experience principles, patterns and components for the digital design system underpinning our new Content Production systems</li>\n<li>Develop and maintain the Design System for the appropriate design medium (currently Figma and Storybook) and keep all documentation up to date</li>\n</ul>\n<h2 id=\"about-you\">About you</h2>\n<p>To be considered for the role of a UX Designer, you will have:</p>\n<ul>\n<li>Several years of experience designing or prototyping at B2C and B2B-focused tech or media companies</li>\n<li>First-rate UX skills on both desktop and web digital products</li>\n<li>Excellent knowledge of user-research and user/usability testing techniques</li>\n<li>Advanced knowledge and experience with using design tools such as Figma, Storybook and other similar prototyping tools</li>\n<li>Ability to manage time and tasks effectively</li>\n<li>Excellent problem-solving skills, with the ability to think \u2018outside-the-box\u2019.</li>\n<li>Strong presentation and written communication skills</li>\n<li>Experience working with a range of local and international stakeholders</li>\n<li>A fair understanding of motion design principles.</li>\n<li>A strong grasp of HTML/CSS, SCSS and other front-end frameworks</li>\n<li>Familiarity of modern JavaScript and React frameworks.</li>\n<li>Familiarity of Angular Material and/or Material Design Principles.</li>\n</ul>\n<h2 id=\"whats-in-it-for-you\">What\u2019s in it For You?</h2>\n<p>You will join our inclusive culture of world-class talent, where we are committed to your personal and professional growth through:</p>\n<ul>\n<li>Hybrid Work Model: Currently the majority of our employees are working within a hybrid environment consisting of in-office and remote work and following local COVID-19 bylaws and guidelines.</li>\n<li>Culture: Globally recognized and award-winning reputation for equality, diversity and inclusion, flexibility, work-life balance, and more.</li>\n<li>Wellbeing: Comprehensive benefit plans; flexible and supportive benefits for work-life balance: company-wide Mental Health Day Off; Headspace app subscription; retirement, savings, tuition reimbursement, and employee incentive programs; resources for mental, physical, and financial wellbeing.</li>\n<li>Learning &amp; Development: LinkedIn Learning access; internal Talent Marketplace with opportunities to work on projects cross-company; Ten Thousand Coffees Thomson Reuters caf\u00e9 networking.</li>\n<li>Social Impact: Eight employee-driven Business Resource Groups; two paid volunteer days annually; Environmental, Social and Governance (ESG) initiatives for local and global impact.</li>\n</ul>\n<p>#LI-IG1</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1120, "index": "1120", "job_title": "Senior Product Designer, Forms", "employer": "Shopify", "publish": "TRUE", "publication_date": "Thu, 26 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://jobs.smartrecruiters.com/Shopify/743999880932012-senior-product-designer-forms-remote-emea-", "job_id": "pplyesd98", "logo_link": "/jobs/logos/Shopify_logo_2018.svg", "location": "Remote", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://jobs.smartrecruiters.com/oneclick-ui/company/Shopify/publication/63eeaf5c-9f5f-4f00-89a8-58ec41cf87f8?dcr_ci=Shopify", "paid_ad": "", "accepting_applications": "26 Jan", "extended_description": "<h2 id=\"company-description\">Company Description</h2>\n<p>Shopify is the leading omni-channel commerce platform. Merchants use Shopify to design, set up, and manage their stores across multiple sales channels, including mobile, web, social media, marketplaces, brick-and-mortar locations, and pop-up shops. The platform also provides merchants with a powerful back-office and a single view of their business, from payments to shipping. The Shopify platform was engineered for reliability and scale, making enterprise-level technology available to businesses of all sizes. Headquartered in Ottawa, Canada, Shopify currently powers over 2,000,000 businesses in approximately 175 countries and is trusted by brands such as Allbirds, Gymshark, PepsiCo, Staples, and many more.</p>\n<h2 id=\"job-description\">Job Description</h2>\n<p>This is an opportunity to join Shopify&#39;s 750 member UX team and solve challenging problems that impact real people as they grow and maintain their businesses. In this role, you will work collaboratively and build iteratively with a multidisciplinary team of developers, product managers, content designers, researchers, and marketers. You\u2019ll deliver world class experiences that make potentially confusing business tasks intuitive and manageable, and empower entrepreneurs world-wide to achieve independence.</p>\n<p>The Forms team&#39;s mission is to help merchants identify and learn directly about their customers by capturing qualitative information for hyper-relevant targeting. We are looking for a Senior Product Designer who has the technical aptitude to work closely with Engineers.  You must also have strong prioritization skills, be able to work autonomously, and also be comfortable with a high degree of collaboration with cross-functional partners. </p>\n<h2 id=\"responsibilities\">Responsibilities</h2>\n<ul>\n<li>Improve the merchant experience. You\u2019ll work on projects from start to finish, while participating in various UX initiatives including design sprints to define and explore merchant problems, content mapping, sketching, wireframing, low and high fidelity prototyping, and stakeholder reviews</li>\n<li>Partner with product researchers to help your team develop empathy for our merchants and advocate for their needs</li>\n<li>Collaborate with different disciplines - You will work closely with engineers, product managers, product researchers, and front-end developers to explore, build, and ship your designs. You will help other disciplines understand the value design can bring to a project and ultimately build and ship the best products</li>\n<li>Ship valuable and high-quality work without sacrificing speed </li>\n<li>Collaborate with multiple teams. Designing for cross-product, cross-platform foundational features, you will be leveraging and incorporating the domain expertise of teams focused on specific merchant workflows.</li>\n</ul>\n<h2 id=\"qualifications\">Qualifications</h2>\n<ul>\n<li>Passion for solving product problems while balancing all facets of a user experience (strategy and research, information architecture, interaction design)</li>\n<li>Understanding of the end-to-end iterative design process including how to develop and use design research, job stories, journey mapping, content modelling, wire-framing, prototyping, user testing, and high-fidelity visuals to achieve human-centered design solutions</li>\n<li>Proficiency in interaction design for native mobile applications</li>\n<li>Experience collaborating closely with multiple disciplines including product and engineering </li>\n<li>Proficiency with current industry design and collaboration tools such as Figma, Sketch, Github, etc.</li>\n</ul>\n<h2 id=\"additional-information\">Additional Information</h2>\n<p>We know that applying to a new role takes a lot of work and we truly value your time. We are looking forward to reading your application. If you\u2019re interested in helping us shape the future of commerce around the world, send us a few samples of your work: portfolio, wireframes, UX flows, publications, or whatever represents what you do best. </p>\n<p><em>At Shopify, we are committed to building and fostering an environment where our employees feel included, valued, and heard. Our belief is that a strong commitment to diversity and inclusion enables us to truly make commerce better for everyone. We strongly encourage applications from Indigenous people, racialized people, people with disabilities, people from gender and sexually diverse communities and/or people with intersectional identities.</em></p>\n<p><strong>Note: Only applicants who submit a portfolio of design work alongside application will be considered.</strong></p>\n<p>#LI-REMOTE</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1121, "index": "1121", "job_title": "Senior Product Designer", "employer": "SilverRail", "publish": "TRUE", "publication_date": "Thu, 26 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://boards.greenhouse.io/silverrail/jobs/6585618002", "job_id": "owyddi82", "logo_link": "/jobs/logos/SilverRail_Logo.svg", "location": "Remote", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://boards.greenhouse.io/silverrail/jobs/6585618002#app", "paid_ad": "", "accepting_applications": "26 Jan", "extended_description": "<p><strong>This role can be worked remotely from the UK/EU</strong></p>\n<p>Rail is set to dominate short and medium haul travel around the world. It\u2019s faster, cheaper, greener and more convenient than air travel, and it cuts down on the carbon emitting congestion of road travel. With the current climate crisis it\u2019s more important than ever to put this mode of transport at the forefront of people&#39;s minds. For every travel company having rail as a booking option is like having vegan choices on the menu \u2013 it\u2019s a must! The trouble is, there\u2019s been nothing modern about rail\u2019s online customer experience\u2026 until now. </p>\n<p>We are SilverRail, a global tech company working to solve this problem by delivering the digital infrastructure that opens up rail to the world! Our technology is powering rail and travel agencies across Europe, USA and Australia/NZ in both leisure and corporate markets, making it easy for people to choose rail and cut their carbon emissions.  </p>\n<p>Although we have been around for more than 10 years, and with our teams based globally in London, Boston, Brisbane and Stockholm, we still consider ourselves an agile start-up business. We are using the Scrum framework for all our software development, and we believe in \u2018fail-fast-fail-early\u2019 to find innovative solutions to complex problems. Our agility and refreshingly novel approaches mean we have already developed into a force to be reckoned with in the European market, but we have ambitions for so much more! With a raft of new clients joining us, and with our growth about to enter its prime, we aim to become the biggest player in the rail tech space. </p>\n<h2 id=\"the-role\">The Role</h2>\n<p>As a Senior Product Designer, you\u2019ll thrive on solving problems and participating in creating beautiful products based on user requirements and in line with the SilverRail brand. You\u2019ll be able to work autonomously and as part of a team of designers. </p>\n<p>The team is very collaborative, friendly and improvement oriented. Having fun while at work is a must! We support flexible remote working with occasional travel into the London office. </p>\n<h2 id=\"key-responsibilities-and-authorities\">Key responsibilities and authorities</h2>\n<ul>\n<li>You will be working on digital travel products with a focus on customer convenience and innovation. You will be required to take ownership of a project and lead its design, as well as helping out with other projects within the company.  </li>\n<li>Build, and maintain a new design system and contribute to and help maintain existing ones </li>\n<li>Gathering and evaluating user requirements, in collaboration with researchers, product managers, stake holders and engineers. </li>\n<li>Illustrate ideas using storyboards, user flows and sitemaps and prototypes. </li>\n<li>Identify and troubleshoot UX problems (e.g. differing native OS behaviours, diverse dynamic content across multiple markets and languages) </li>\n<li>Take feedback onboard, refine designs based on user feedback and analytics </li>\n<li>Reporting directly to the Design Director and the Chief Customer Officer.</li>\n</ul>\n<h2 id=\"competence-and-skills\">Competence and skills</h2>\n<ul>\n<li>Ideally 5-10 years&#39; experience as a UI &amp; UX/product Designer, with an equal balance of beautiful and engaging UI design and thoughtful and considered UX design. . . </li>\n<li>A strong portfolio, demonstrating contribution and input to projects and products. </li>\n<li>Familiar with accessibility standards for digital products </li>\n<li>Experience using Figma or similar is essential (As a company we use Figma, so knowledge of other similar software must be immediately transferable) </li>\n<li>Experience designing/building click-through prototypes and setting usability studies/sessions. </li>\n<li>The ability to work autonomously and to meet deadlines. </li>\n<li>The ability to work collaboratively </li>\n<li>Attention to detail &amp; pixel perfect design, good organisation skills.  </li>\n<li>Excellent visual, verbal and written communication skills. </li>\n<li>Happy to take input/direction, but also to voice own opinions and contribute own ideas. </li>\n<li>Knowledge or experience of rail travel and/or e-commerce is beneficial but not essential.</li>\n</ul>\n<h2 id=\"why-us\">Why us?</h2>\n<ul>\n<li>We have an average Glassdoor grade of 4.7 and 100% recommendation rates. </li>\n<li>We are an accredited flexible company and were named in Flexa\u2019s Top 50 Most Flexible Companies </li>\n<li>We utilise a hybrid working model, providing equipment for home working alongside occasional visits to our beautiful central London office. </li>\n<li>We offer a highly competitive benefits package including private healthcare and Perkbox rewards, as well as stock options that give you the chance to buy into SilverRail\u2019s future. </li>\n<li>We provide a wealth of career development opportunities with training that is individual, focused on improving your skills and helping you become the best professional you can be. </li>\n<li>Our team\u2019s health and wellness is genuinely important to us, so we offer a number of wellbeing seminars, yoga classes, and membership to the #1 leading meditation app. </li>\n<li>A unique opportunity to work for a tech start-up that is revolutionising the way we travel.</li>\n</ul>\n<p>Our values are simple: <strong>Do Good</strong> by working for a better tomorrow; <strong>Think Big Act Smart</strong> by being curious, adaptable and data-driven; and remember that through collaboration we will always be <strong>Stronger Together</strong>.  </p>\n<p><em>We are an equal opportunities and neurodiverse employer. All qualified applicants will be considered regardless of race, colour, religion, gender, gender identity or expression, sexual orientation, genetics, national origin, disability, age or any other grounds. If there is anything we can do to support your interview or any adjustments you need to help you bring your best self to an interview please let us know</em> </p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1122, "index": "1122", "job_title": "UX Front-end Developer/Designer - Paratext", "employer": "United Bible Societies", "publish": "TRUE", "publication_date": "Mon, 30 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "27 Feb", "original_job_description": "https://docs.google.com/document/d/12A1jQDvYyWcJauYiWIZFubyVTS4Dtvjh/edit?usp=sharing&ouid=105317085357976337451&rtpof=true&sd=true", "job_id": "ooswa87", "logo_link": "/jobs/logos/toppng.com-ubs-logo-united-bible-societies-6331x2012.png", "location": "Remote", "apply_by_date": "", "work_pat": "6 Months, with possibility to extend", "money_min": "\u00a337,500", "money_max": "\u00a365,000", "money": "\u00a337500-65000", "money_median": "51,250", "rank": "0.6", "money_indication": "", "show_salary": "TRUE", "apply_link": "mailto:recruitment@biblesocieties.org", "paid_ad": "Paid", "accepting_applications": "30 Jan", "extended_description": "<p><strong>Responsible to:</strong> UBS Paratext UX Product Owner</p>\n<p><strong>Ref:</strong> PTUX112201</p>\n<h2 id=\"description\">Description</h2>\n<p>The Bible Ministry Technology team is looking for a highly creative person with a passion for creating satisfying user experiences for technical desktop software. You will be part of a small UX team within a larger development team. You will prototype, design and code the user interface for Paratext, the premier Bible translation tool. The result of your work will be used worldwide by an incredibly diverse user base from hundreds of translation agencies, each with distinct and different translation methods and needs. You will be working from home in a distributed inter-organizational team (United Bible Societies and Wycliffe/SIL) with colleagues based in UK, USA and Europe.</p>\n<h2 id=\"must-haves\">Must Haves</h2>\n<ul>\n<li>Bachelors degree in Computer Science, Ergonomics, User Experience, Interaction Design, Communication Design, or a related field.</li>\n<li>2+ years of professional experience in a front-end or UX role, ideally on desktop applications.</li>\n<li>Excellent knowledge of HTML/CSS/Javascript/XML.</li>\n<li>Experience of C#/.Net development and Windows Forms and/or React.</li>\n<li>A keen aesthetic and proportional sensibility, with strong typographical and layout skills.</li>\n<li>Experience prototyping and creating detailed user experience wireframes and flows.</li>\n<li>Ability to represent designs from ideation to completion via sketching, wireframing and prototyping.</li>\n<li>Ability to empathise with a broad range of users, from incredibly diverse cultural, linguistic, educational and computing backgrounds.</li>\n<li>Comfortable evaluating the usability of designs with users, both remotely and in person.</li>\n<li>Experience maintaining a style guide or design system.</li>\n<li>Must be very comfortable working collaboratively and sharing ideas to find the most suitable solution to UX challenges.</li>\n<li>Must be excited by the idea of learning what was wrong with a design you have created and discovering how it can improve.</li>\n<li>Good experience of prototyping tools such as Axure RP, Balsamiq Mockups, Figma, Adobe Creative Suite, including Illustrator, Photoshop, Adobe XD.</li>\n<li>Can share a current portfolio showcasing examples of past work in UX/UI and IXD.</li>\n<li>Comfortable with working in ecumenical setting.</li>\n</ul>\n<h2 id=\"nice-to-haves\">Nice to haves</h2>\n<ul>\n<li>Experience working in an Agile environment, incorporating UX (the UX team works ahead of development sprints).</li>\n<li>Experience of applying accessibility standards to user interface design.</li>\n<li>Experience analysing data from user research.</li>\n<li>Able to analyse and learn a large existing codebase.</li>\n<li>Understanding of publishing processes in print and digital formats.</li>\n<li>Ability with languages other than English.</li>\n<li>Knowledge of Biblical Greek or Hebrew.</li>\n<li>Experience of widely cross cultural environments.</li>\n</ul>\n<h2 id=\"responsibilities\">Responsibilities</h2>\n<ul>\n<li>Operationally answerable to UBS Paratext UX Product Owner within a team which answers to the Paratext Product Owner (SIL).</li>\n<li>Organisationally answerable to Director of Bible Ministry Technology (UBS).</li>\n<li>Bridge gaps between UX and development. Facilitating more efficient development through creation of a coherent design system, reusable assets and a style guide.</li>\n<li>Design and create UI using sketches, user flows, wireframes, high fidelity prototypes.</li>\n<li>Analyse software requirements by consulting closely with users.</li>\n<li>Participate in user research.</li>\n<li>Implement user interfaces in a Windows application using C#, HTML, Javascript and CSS.</li>\n<li>Communicate clearly with other members of the development team.</li>\n<li>Work 37.5 hours per week remotely.</li>\n<li>Available for international travel.</li>\n<li>Treat team members and customers well.</li>\n<li>Keep abreast of current technology and UX practice.</li>\n</ul>\n<p>Please email to <a href=\"mailto:&#x72;&#x65;&#x63;&#x72;&#117;&#x69;&#x74;&#109;&#x65;&#x6e;&#116;&#x40;&#x62;&#105;&#x62;&#x6c;&#101;&#115;&#x6f;&#99;&#x69;&#x65;&#x74;&#x69;&#101;&#115;&#x2e;&#111;&#x72;&#x67;\">&#x72;&#x65;&#x63;&#x72;&#117;&#x69;&#x74;&#109;&#x65;&#x6e;&#116;&#x40;&#x62;&#105;&#x62;&#x6c;&#101;&#115;&#x6f;&#99;&#x69;&#x65;&#x74;&#x69;&#101;&#115;&#x2e;&#111;&#x72;&#x67;</a> by the closing date - please enter <strong>UX Front-end\nDeveloper/Designer (UX Brighton job alerts)</strong>- as the email subject and submit the following 2\ndocuments:</p>\n<ul>\n<li>Up to date CV.</li>\n<li>A cover letter outlining your suitability for this role.</li>\n</ul>\n<p>Please tell us why you would like to work on software for Bible translation and what makes you a great candidate to work for United Bible Societies on an inter-organisational, multi-cultural team.</p>\n<p>Only candidates who complete all of these requirements will be considered for the interview.</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1123, "index": "1123", "job_title": "UX Designer/Researcher - Paratext", "employer": "United Bible Societies", "publish": "TRUE", "publication_date": "Mon, 30 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "27 Feb", "original_job_description": "https://docs.google.com/document/d/1LcsZiU0N0z3m19Yy7Visvu9bQchDHbJc/edit?usp=sharing&ouid=105317085357976337451&rtpof=true&sd=true", "job_id": "pphyf76", "logo_link": "/jobs/logos/toppng.com-ubs-logo-united-bible-societies-6331x2012.png", "location": "Remote", "apply_by_date": "", "work_pat": "6 Months, with possibility to extend", "money_min": "\u00a335,000", "money_max": "\u00a355,000", "money": "\u00a335000-55000", "money_median": "45,000", "rank": "0.4", "money_indication": "", "show_salary": "TRUE", "apply_link": "mailto:recruitment@biblesocieties.org", "paid_ad": "Paid", "accepting_applications": "30 Jan", "extended_description": "<p><strong>Responsible to:</strong> UBS Paratext UX Product Owner</p>\n<p><strong>Ref:</strong> PTUX112202</p>\n<h2 id=\"background\">Background</h2>\n<p>The Bible Ministry Technology team is looking for a highly creative person with a passion for creating satisfying user experiences for technical desktop software. You will be part of a small UX team within a larger development team. You will research user needs, prototype, design and test the usability of the user interface for Paratext, the premier Bible translation tool. The result of your work will be used worldwide by an incredibly diverse user base from hundreds of translation agencies, each with distinct and different translation methods and needs. You will be working from home in a distributed inter-organizational team (United Bible Societies and Wycliffe/SIL) with colleagues based in the UK, USA and Europe.</p>\n<h2 id=\"must-haves\">Must Haves</h2>\n<ul>\n<li>Bachelors degree in Ergonomics, User Experience, Interaction Design, Communication Design, or a related field.</li>\n<li>Professional experience in a UX design or research role, ideally on desktop applications.</li>\n<li>Experience prototyping and creating detailed user experience wireframes and flows.</li>\n<li>Ability to represent designs from ideation to completion via sketching, wireframing and prototyping.</li>\n<li>Ability to find solutions which are simple enough for users with almost no education and yet complete enough to cater to scholars and experts.</li>\n<li>Ability to communicate effectively with a broad range of users, from incredibly diverse cultural, linguistic, educational and computing backgrounds.</li>\n<li>Ability to determine what users truly need, rather than what they want, or what they think you want to hear, using appropriate communication techniques and research methods.</li>\n<li>Comfortable evaluating the usability of designs with users, both remotely and in person.</li>\n<li>Excellent experience collecting and analysing data from user research and presenting it with clarity.</li>\n<li>Must be very comfortable working collaboratively and sharing ideas to find the most suitable solution to UX challenges.</li>\n<li>Comfortable communicating research or design information with external stakeholders and within the development team.</li>\n<li>Must be excited by the idea of learning what was wrong with a design you have created and discovering how it can improve.</li>\n<li>Able to advocate for UX and communicate UX value with stakeholders who are unfamiliar with UX methods.</li>\n<li>Good experience of prototyping tools such as Axure RP, Balsamiq Mockups, Figma, Adobe Creative Suite, including Illustrator, Photoshop, Adobe XD.</li>\n<li>Can share a current portfolio showcasing examples of past work in UX/UI and IXD.</li>\n<li>Comfortable working in ecumenical setting.</li>\n</ul>\n<h2 id=\"nice-to-haves\">Nice to haves</h2>\n<ul>\n<li>Experience working in an Agile environment, incorporating UX.</li>\n<li>Experience of applying accessibility standards to user interface design.</li>\n<li>Experience maintaining a style guide or design system.</li>\n<li>Experience of React or Qt which are potential Paratext future architectures.</li>\n<li>Understanding of publishing processes in print and digital formats.</li>\n<li>Ability with languages other than English.</li>\n<li>Knowledge of Biblical Greek or Hebrew</li>\n<li>Experience of widely cross cultural environments</li>\n<li>Responsibilities</li>\n<li>Operationally answerable to UBS Paratext UX Product Owner within a team which answers to the Paratext Product Owner (SIL).</li>\n<li>Organisationally answerable to the Director of Bible Ministry Technology (UBS).</li>\n<li>Bridge gaps between UX and development. Facilitating more efficient development by providing answers to questions about user requirements and advocating usability principles.</li>\n<li>Contribute to UI sketches, user flows, wireframe, high fidelity prototypes.</li>\n<li>Analyse software requirements by consulting with users.</li>\n<li>Participate in user research, using a variety of UX techniques.</li>\n<li>Help to organise stakeholder research groups ranging from users to product leaders with people often participating, maintaining contact, managing expectations and keeping research efforts on track.</li>\n<li>Communicate clearly with other members of the development team.</li>\n<li>Work 37.5 hours per week remotely.</li>\n<li>Available for international travel.</li>\n<li>Treat team members and customers well.</li>\n<li>Keep abreast of current technology and UX practice.</li>\n</ul>\n<p>Please email to <a href=\"mailto:&#114;&#x65;&#99;&#114;&#117;&#x69;&#x74;&#x6d;&#101;&#x6e;&#116;&#x40;&#98;&#x69;&#x62;&#108;&#x65;&#x73;&#x6f;&#99;&#x69;&#101;&#116;&#x69;&#x65;&#115;&#x2e;&#111;&#x72;&#103;\">&#114;&#x65;&#99;&#114;&#117;&#x69;&#x74;&#x6d;&#101;&#x6e;&#116;&#x40;&#98;&#x69;&#x62;&#108;&#x65;&#x73;&#x6f;&#99;&#x69;&#101;&#116;&#x69;&#x65;&#115;&#x2e;&#111;&#x72;&#103;</a> by the closing date - please enter **UX\nDesigner/Researcher (UX Brighton job alerts)**as the email subject and submit the following 2\ndocuments:</p>\n<ul>\n<li>Up to date CV.</li>\n<li>A cover letter outlining your suitability for this role.</li>\n</ul>\n<p>Please tell us why you would like to work on software for Bible translation and what makes you a great candidate to work for United Bible Societies on an inter-organisational, multi-cultural team.</p>\n<p>Only candidates who complete all of these requirements will be considered for the interview.</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1124, "index": "1124", "job_title": "UX Research - working student", "employer": "Publicis Sapient", "publish": "TRUE", "publication_date": "Mon, 30 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://jobs.smartrecruiters.com/PublicisGroupe/743999881205466-ux-research-working-student-20-hours-per-week-6-month-contract", "job_id": "azzuhew98", "logo_link": "/jobs/logos/PubSap-Logo.svg", "location": "London", "apply_by_date": "", "work_pat": "6 Months, 20 hrs/week", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://jobs.smartrecruiters.com/oneclick-ui/company/PublicisGroupe/publication/191d3b66-70b8-42fa-b956-ab2c315b1a84?dcr_ci=PublicisGroupe", "paid_ad": "", "accepting_applications": "30 Jan", "extended_description": "<h2 id=\"company-description\">Company Description</h2>\n<p>Publicis Sapient is a digital transformation partner helping established organisations get to their future, digitally-enabled state, both in the way they work and the way they serve their customers. We help unlock value through a start-up mindset and modern methods, fusing strategy, consulting and customer experience with agile engineering and problem-solving creativity. United by our core values and our purpose of helping people thrive in the brave pursuit of next, our 20,000+ people in 53 offices around the world combine experience across technology, data sciences, consulting and customer obsession to accelerate our clients\u2019 businesses through designing the products and services their customers truly value.</p>\n<h2 id=\"job-description\">Job Description</h2>\n<p>The Publicis Sapient Experience Design Capability is the bridge between business strategy and applied technology \u2014 we create meaningful, holistic experiences for our clients and their customers. We are multiskilled thinkers, computational designers, environmental designers, researchers, and architects. A big part of our work is collaboration \u2013 internally, and with our clients. That collaboration thrives on a can-do attitude and an interest for working across tenures, roles, capabilities, countries and cultures. </p>\n<p>As a Working Student in UX Research, you will join our Salesforce 360\u00ba Innovation Hub as a full team member. Your role will focus on the UX strategy and aligning the UX with behavioural patterns. You will create quantitative and qualitative research and participate in the explorative phase, as well as in the testing phase of our product development. Understanding and identifying the user needs is key for your role.</p>\n<p>Sounds interesting to you? Great! If you are currently studying and can work 20 hours per week, apply now.</p>\n<h2 id=\"your-impact\">Your Impact</h2>\n<ul>\n<li>Insights into the entire ideation process: From conducting research, defining user personas, user stories, flows, to wireframing (low and high fidelity), as well as testing using surveys + interviews and evaluation</li>\n<li>Development of UX and interaction pattern based on user research outcomes</li>\n<li>Create high level strategies for new features and enhancements</li>\n<li>Responsible for the documentation of research outcomes</li>\n</ul>\n<h2 id=\"qualifications\">Qualifications</h2>\n<p>Your Skills &amp; Experience:</p>\n<ul>\n<li>Studies in the realm of UX Research such as Media, Service or Interaction Design or similar fields of study</li>\n<li>First practical experience in the project realm</li>\n<li>Experience working with tools such as mural and MS Office Software</li>\n<li>Confident in raising your voice, regardless if it is about ideas, creative thoughts or project related concerns</li>\n<li>High motivation and hands-on mentality</li>\n<li>Team Player mindset and willingness to learn </li>\n<li>Excellent English language skills</li>\n</ul>\n<h2 id=\"additional-information\">Additional Information</h2>\n<p>What\u2019s in it for you?</p>\n<ul>\n<li>We know the importance of health and wellbeing so offer you extensive retail discount offers and further reimbursement towards activities that contribute to a healthier lifestyle</li>\n<li>Our beautiful Turnmill office is open</li>\n<li>You can meet over a complimentary barista-made coffee and our teams have been busy replicating face-to-face social activities through learning languages virtually, yoga sessions, having a laugh at our online summer fairs and so much more</li>\n<li>Diversity and inclusion aren&#39;t just buzzwords. We offer an inclusive environment through our inspirational business resource groups and work with you to give back to the local community through CSR efforts</li>\n</ul>\n<p><em>As part of our dedication to the diversity of our workforce, Publicis Sapient is committed to Equal Employment Opportunity without regard for race, colour, national origin, ethnicity, gender, disability, sexual orientation, gender identity, or religion.</em></p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1125, "index": "1125", "job_title": "UX UI Visual Design - working student", "employer": "Publicis Sapient", "publish": "TRUE", "publication_date": "Mon, 30 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://jobs.smartrecruiters.com/PublicisGroupe/743999881206424-ux-ui-visual-design-working-student-20-hours-per-week-6-month-contract", "job_id": "psuuer81", "logo_link": "/jobs/logos/PubSap-Logo.svg", "location": "London", "apply_by_date": "", "work_pat": "6 Months, 20 hrs/week", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://jobs.smartrecruiters.com/oneclick-ui/company/PublicisGroupe/publication/9a9ce8a6-4915-4fca-b62d-ab4688ee5622?dcr_ci=PublicisGroupe", "paid_ad": "", "accepting_applications": "30 Jan", "extended_description": "<h2 id=\"company-description\">Company Description</h2>\n<p>Publicis Sapient is a digital transformation partner helping established organisations get to their future, digitally-enabled state, both in the way they work and the way they serve their customers. We help unlock value through a start-up mindset and modern methods, fusing strategy, consulting and customer experience with agile engineering and problem-solving creativity. United by our core values and our purpose of helping people thrive in the brave pursuit of next, our 20,000+ people in 53 offices around the world combine experience across technology, data sciences, consulting and customer obsession to accelerate our clients\u2019 businesses through designing the products and services their customers truly value.</p>\n<h2 id=\"job-description\">Job Description</h2>\n<p>The Publicis Sapient Experience Design Capability is the bridge between business strategy and applied technology \u2014 we create meaningful, holistic experiences for our clients and their customers. We are multiskilled thinkers, computational designers, environmental designers, researchers, and architects. A big part of our work is collaboration \u2013 internally, and with our clients. That collaboration thrives on a can-do attitude and an interest for working across tenures, roles, capabilities, countries and cultures.</p>\n<p>As Working Student in UX UI Visual Design, you become a full member of our international innovation team. Your role will focus on the creation of UI elements, accessibility topics, data visualization, and brand maintenance. Besides gaining practical work experience and working on exciting tasks, you will benefit from our open corporate culture and work with colleagues from various areas.</p>\n<p>Sounds interesting to you? Great! If you are currently studying and are looking for work for 20 hours per week, apply now.</p>\n<h2 id=\"your-impact\">Your Impact</h2>\n<ul>\n<li>Insights into the entire creation process: From conducting research, defining user personas, user stories, flows, to wireframing (low and high fidelity) as well as testing using surveys, interviews and evaluation</li>\n<li>Supporting the creation of a UX playbook</li>\n<li>Development of UX and interaction pattern</li>\n<li>Assisting in maintaining and developing the design system</li>\n</ul>\n<h2 id=\"qualifications\">Qualifications</h2>\n<p>Your Skills &amp; Experience:</p>\n<ul>\n<li>Studies in the realm of digital design such as Media, Graphic, Interaction, UX/UI or similar fields of study  </li>\n<li>Confident in using Figma and working with component libraries</li>\n<li>Experience working with the digital workspace tool mural</li>\n<li>First practical experience in the digital design field</li>\n<li>Confident in raising your voice, regardless if it is about ideas, creative thoughts or project related concerns</li>\n<li>High motivation and hands-on mentality</li>\n<li>Team Player mindset and willingness to learn </li>\n<li>Excellent English language skills</li>\n</ul>\n<h2 id=\"additional-information\">Additional Information</h2>\n<p>What\u2019s in it for you?</p>\n<ul>\n<li>We know the importance of health and wellbeing so offer you extensive retail discount offers and further reimbursement towards activities that contribute to a healthier lifestyle</li>\n<li>Our beautiful Turnmill office is open</li>\n<li>You can meet over a complimentary barista-made coffee and our teams have been busy replicating face-to-face social activities through learning languages virtually, yoga sessions, having a laugh at our online summer fairs and so much more</li>\n<li>Diversity and inclusion aren&#39;t just buzzwords. We offer an inclusive environment through our inspirational business resource groups and work with you to give back to the local community through CSR efforts</li>\n</ul>\n<p><em>As part of our dedication to the diversity of our workforce, Publicis Sapient is committed to Equal Employment Opportunity without regard for race, colour, national origin, ethnicity, gender, disability, sexual orientation, gender identity, or religion.</em></p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1126, "index": "1126", "job_title": "UX/UI Designer - CRO", "employer": "Virgin Media", "publish": "TRUE", "publication_date": "Mon, 30 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "10 Feb", "original_job_description": "https://libertyglobal.wd3.myworkdayjobs.com/en-US/Virgin_Media_Careers/job/London/UX-UI-Designer---CRO_REQ_00033985-1", "job_id": "pqibnv93", "logo_link": "/jobs/logos/VirginMedia-logo.svg", "location": "Hybrid, London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://libertyglobal.wd3.myworkdayjobs.com/en-US/Virgin_Media_Careers/job/London/UX-UI-Designer---CRO_REQ_00033985-1", "paid_ad": "", "accepting_applications": "30 Jan", "extended_description": "<h2 id=\"about-the-role\">About the role</h2>\n<p>We are looking for a UX/UI Designer - CRO to join and be a part of a group of seasoned creatives and specialists. You\u2019ll be crafting outstanding digital experiences that engage our customers and compel them to transact with us and have a magnificent experience through a high priority digital transformation programme.</p>\n<h2 id=\"so-thats-what-youll-get-up-to-but-what-about-us\">So that&#39;s what you&#39;ll get up to, but what about us?</h2>\n<p>Well, we&#39;re super proud of our history, helping communities to stay connected with oodles of top-notch products and services. We offer the full works \u2013 broadband, TV, mobile and landline \u2013 equipping our customers out with the very latest tech.</p>\n<p>But it&#39;s not just what we do, but why we do it that really matters.</p>\n<p>Our mission is to become the most recommended brand, by our people and our customers. A massive part of that journey is about how we ensure that our brilliant people have a working environment in which they can truly belong and thrive.</p>\n<p>For us, it&#39;s critical that every single person can bring, and be, their whole selves at work, and we&#39;re working hard every day to achieve this.</p>\n<h2 id=\"tell-me-more-tell-me-more\">Tell me more, tell me more\u2026</h2>\n<p>As a UX/UI Designer, it&#39;s your job to get under the skin of the users&#39; needs, balancing them with the business requirements to build well rounded solutions. You\u2019ll love taking ideas from whiteboard sketches all the way through to completion of beautifully crafted and polished user interfaces (UI).</p>\n<p>As a valued member of the team you will play a key part working on exciting projects from initial research and conception to final designs and development implementation while maintaining our pattern library, making sure it&#39;s easy to use and accessible.</p>\n<p>You&#39;ll work closely with our insights team to verify all experiences we design are fully user-tested and validated before and after launch, ensuring we stay user-centric at all times.</p>\n<p>People development is core to our Virgin Media values and you\u2019ll be surrounded and supported by a leading team of digital and technological experts that deliver and evolve at a fast pace and will help and push you to develop at an equally rapid rate.</p>\n<h2 id=\"the-must-haves\">The must haves</h2>\n<ul>\n<li>Experience of AB testing/CRO/Experimentation and understand the principles of it</li>\n<li>Ability to understand quantitative date and use analytics to make design decisions</li>\n<li>Degree in a design related subject area, or relevant and substantial on the job experience</li>\n<li>Portfolio of storytelling a vision through illustration of life-cycle states</li>\n<li>Experience as a multi-disciplined Designer in a transformational digital environment</li>\n<li>Experience reading and pulling data from Adobe Analytics and UserZoom. Session Camp is a bonus but not crucial</li>\n</ul>\n<h2 id=\"other-stuff-were-looking-for\">Other stuff we&#39;re looking for</h2>\n<ul>\n<li>Solid proficiency in design tools such as Sketch, Zeplin, InVision and Adobe CC</li>\n<li>A keenness to understand more about analytics, using data to advise decisions</li>\n<li>Good understanding of A/B and multi-variant testing</li>\n</ul>\n<h2 id=\"whats-in-it-for-you\">What&#39;s in it for you?</h2>\n<p>We know that benefits mean so much more than the &#39;stuff&#39; we can give you, so we offer a wide range of support, rewards and tools - all focused on helping you to prioritise what really matters.</p>\n<p>All work and no play just isn&#39;t our style! We&#39;re already planning our future ways of working, for when life becomes a little more normal again. We&#39;re constantly evolving our approach to enable you to find a great work life balance.</p>\n<p>We&#39;re also open to chatting about part time or adjusted working (so don&#39;t be worried to ask the question).</p>\n<p>If you go on to be successful in your application, some of the many benefits include:</p>\n<ul>\n<li>25 days&#39; annual leave, plus UK bank holidays.</li>\n<li>A defined contribution pension scheme, run by Fidelity, matched up to 10%.</li>\n<li>Access to wellbeing benefits such as the Unmind App, personal medical cover (which you can opt to upgrade to cover loved ones) and critical illness cover.</li>\n<li>Season ticket loans.</li>\n<li>Your birthday off every year, to treat yourself.</li>\n<li>The option to buy and sell up to 5 days leave, to suit your personal needs.</li>\n</ul>\n<h2 id=\"next-steps\">Next Steps</h2>\n<p>If you think you&#39;ve got some outstanding skills to offer us, and Virgin Media feels like a place where you can belong, we&#39;d love to learn more about you.</p>\n<p>When you apply, you&#39;ll be asked about any adjustments you might need to support the recruitment process. Let us know, and we&#39;ll be sure to discuss it with you.</p>\n<p>Thanks for your patience in the meantime and for showing an interest in joining the Virgin Media family</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1127, "index": "1127", "job_title": "Senior Product Designer - The Orchard", "employer": "Sony Music Entertainment UK", "publish": "TRUE", "publication_date": "Tue, 31 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://www.sonymusic.co.uk/careers/job-description/?gh_jid=6589715002", "job_id": "pazuuft66", "logo_link": "/jobs/logos/sony-logo.png", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://www.sonymusic.co.uk/careers/job-description/?gh_jid=6589715002", "paid_ad": "", "accepting_applications": "31 Jan", "extended_description": "<h2 id=\"design-at-the-orchard\">Design at the Orchard</h2>\n<p>The product design team supports all the products and services across the tech organization. Our role is to transform a huge amount of data into valuable and clear information for our users, and guide them through various complex workflows to help them thrive as an artist or label. Our suite of apps all share the same DNA and we\u2019re responsible for ensuring that whichever apps our customers have access to, their experience will be seamless and consistent.</p>\n<ul>\n<li>We work with design principles that guide the reasoning behind our design decisions.</li>\n<li>We use and contribute to our design system - a components library with associated rules and best practices.</li>\n<li>We measure the impact of our design decisions and use this data to inform our iterations.</li>\n</ul>\n<h2 id=\"your-role\">Your Role</h2>\n<p>We are looking for a London based Senior Product Designer that can help us build valuable tools for artists &amp; labels, as well as our internal users. In this role, you will be part of the product design team (both US and EU based) and work on strategic products and initiatives. You will collaborate closely with product managers, engineers, designers and internal stakeholders.</p>\n<h2 id=\"what-youll-do\">What You&#39;ll Do</h2>\n<ul>\n<li>Support one of our key Product areas by owning the design and UX of all features and apps in this area.</li>\n<li>Work within a complex system of content and permissions, dealing with a huge amount of data.</li>\n<li>Contribute to the roadmap \u2013 collaborate with the rest of the product team to discover, define and prioritize product work</li>\n<li>Constantly work to create value for our users by suggesting elegant and simple design solutions that solve their problems and seize new opportunities</li>\n<li>Coordinate with the rest of the product design team and Product Managers in other teams to create a consistent experience language, and seamless connections between apps.</li>\n<li>Collaborate with other Product Designers on their projects to give feedback, collaborate, lead or mentor</li>\n</ul>\n<h2 id=\"wed-love-to-hear-from-you-if-you-have\">We\u2019d love to hear from you if you have</h2>\n<ul>\n<li>Interest and excitement about problem solving</li>\n<li>An aptitude for systems thinking and information architecture</li>\n<li>Experience in planning and running discovery \u2013 identify what inputs are needed and how best to get those inputs</li>\n<li>Interaction design skills (both on desktop and mobile) </li>\n<li>Experience in running collaborative workshops to communicate users needs and collaborate with both business and engineering to reach the best solution.</li>\n<li>An aptitude for simplifying complexity and transforming data into valuable information</li>\n<li>Eagerness to learn, a track record for being self-driven, and experience managing multiple projects at the same time</li>\n</ul>\n<h2 id=\"what-we-offer-you\">What We Offer You</h2>\n<ul>\n<li>An opportunity to influence music on a global stage</li>\n<li>A modern, diverse and creative work environment</li>\n<li>An investment in your learning &amp; development</li>\n</ul>\n<h2 id=\"about-the-orchard\">About The Orchard</h2>\n<p>The Orchard is a leading music distribution company operating in 45 markets worldwide \u2013  distributing music from independent artists including Ozuna, Skepta, Jorja Smith, and Kelsea Ballerini. With cutting edge operations and an unparalleled global team, The Orchard partners with labels of all sizes to make their music and video available across hundreds of digital and physical retailers around the world. At The Orchard, the focus is to provide a comfortable, social and engaging environment to encourage productivity and creativity.</p>\n<p><em>The Orchard is committed to providing equal employment opportunity for all persons regardless of age, disability, national origin, race, color, religion, sex, sexual orientation, gender, gender identity or expression, pregnancy, veteran or military status, marital and civil partnership/union status, alienage or citizenship status, creed, genetic information or any other status protected by applicable federal, state, or local law.</em></p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1128, "index": "1128", "job_title": "Product Designer", "employer": " IG Group ", "publish": "TRUE", "publication_date": "Tue, 31 Jan \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://ig.wd3.myworkdayjobs.com/en-US/EXT_IG/job/Cannon-Street-London/Product-Designer_R_10859-1", "job_id": "oghytd82", "logo_link": "/jobs/logos/IG-Group-navy-blue.png", "location": "Cannon Street, London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://ig.wd3.myworkdayjobs.com/en-US/EXT_IG/job/Cannon-Street%2C-London/Product-Designer_R_10859-1/apply/applyManually", "paid_ad": "", "accepting_applications": "31 Jan", "extended_description": "<h2 id=\"role-purpose\">Role purpose</h2>\n<p>The Digital Experience and Design team is made up of product designers, copywriters, researchers and marketing specialists, working collaboratively in an atmosphere that\u2019s more tech company than financial services. We are part of the marketing group at IG, with strong ties to our business partners in technology and product management. Our ambition is to create a best-in-class trading experience, which is fueled by a deep understanding of our clients and their needs. You will be joining us on our journey to elevate the level of creative thinking and design within our products, seeking to delight customers through a data driven approach.</p>\n<h2 id=\"what-you-will-do\">What you will do</h2>\n<p>We are looking for an experienced, highly motivated, and forward-thinking Product Designer to help shape the future of IGs trading products.</p>\n<h3 id=\"responsibilities\">Responsibilities</h3>\n<ul>\n<li>Work across the entire design process from ideation to implementation.</li>\n<li>Create and deliver beautiful on brand, inspiring design solutions </li>\n<li>Work with pace and energy to prototype, test and iterate design ideas</li>\n<li>Proactively observe and implement learnings from user testing and research</li>\n<li>Use excellent communication skills to get everyone, at all levels, excited about your work</li>\n<li>Collaborate closely with other our business partners in technology and product management</li>\n<li>Continually share and align your work with the wider design team</li>\n<li>Understand our design system, experience principles and brand guidelines</li>\n<li>Proactively engage in the learning and understanding of IGs products</li>\n</ul>\n<h2 id=\"who-you-are\">Who you are</h2>\n<p>You\u2019re upbeat and enthusiastic, and you have an open mind and a curious, can-do attitude. You, like us, understand the importance of collaboration and are driven to be the best in what you do. You embody our three core values \u2013 to champion the client, learn fast together and raise the bar. You want to be part of a proudly carbon-neutral company that will prioritise your wellbeing and that of the world around you, helping to create a brighter future for all. A company that embraces diversity and welcomes everyone with respect, regardless of race, age, sexual orientation, gender, identification, faith or culture. If you\u2019re inspired by our way of working and can bring something new to our team of topnotch people, then you\u2019ll find a home here.</p>\n<p>You\u2019re a passionate self-starter, able to generate simple, solutions to complex problems. You care deeply about good design and your craft - continuously learning how to improve your design knowledge and skills. You&#39;ll collaborate with other designers, developers and product owners to create usable and useful products that are delightful and consistent across interfaces and platforms. Working through business problems, you&#39;ll translate our client needs into brilliant designs that are perfectly executed.</p>\n<h3 id=\"skills\">Skills</h3>\n<ul>\n<li>An outstanding portfolio of beautiful cross-platform designs - web, iOS, Android</li>\n<li>A strong understanding of the relationship between good UX, UI and branding</li>\n<li>Experience in delivering the design of global products</li>\n<li>Ability to create working prototypes and demonstrate interactive design solutions</li>\n<li>Have excellent presentation, storytelling and communication skills</li>\n<li>An appetite for working with complexity, data, numbers and forms.</li>\n<li>Experience of working with and contributing to design systems.</li>\n</ul>\n<h2 id=\"who-we-are\">Who we are</h2>\n<p>We\u2019ve been at the forefront of trading innovation since 1974, taking on the challenge to deliver an unmatched experience for our clients and raise the bar for tomorrow\u2019s opportunities.</p>\n<p>Today, we\u2019re a global fintech company incorporating the IG, tastylive, Brightpool, IG Prime, Spectrum, and DailyFX brands, with a presence in 20 countries across five continents and over 400 000 active clients worldwide. But we know our success is only possible because of our people, who we encourage and empower to be brave, determined, and inventive.</p>\n<p>Join us if you\u2019d like to work in an inclusive, collaborative team that will recognise your talent and allow it to shine.</p>\n<h2 id=\"what-youll-get\">What you\u2019ll get</h2>\n<p>As well as having the chance to attend regular social events and join special-interest groups, you get an attractive selection of benefits working with IG:</p>\n<ul>\n<li>Competitive salary</li>\n<li>Contribution to medical aid for you, your children and spouse</li>\n<li>Risk benefit insurance</li>\n<li>Flexible working hours and work-from-home opportunities</li>\n<li>Performance-related bonuses</li>\n<li>Contribution to gym membership</li>\n<li>Comprehensive global and local onboarding process \u2013 to the company and to your role</li>\n<li>Unlimited access to LinkedIn Learning Platform</li>\n<li>Funding for training or studies relevant to your role</li>\n<li>Employee-led LGBTQ+, Women\u2019s, Black and Parents &amp; Carers networks with annual budget for organizing events &amp; projects that foster an open, diverse and inclusive culture</li>\n<li>Option to participate and create ESG initiatives based on IG Brighter Future Fund</li>\n<li>2 additional days off a year for voluntary work</li>\n<li>1 additional day off to celebrate your birthday</li>\n</ul>\n<h2 id=\"where-youll-work\">Where you\u2019ll work</h2>\n<p>As part of our hybrid working environment, you\u2019ll split your time between home and the office. In this way, you\u2019ll be able to enjoy a better work-life balance and always bring your best self to your role. At the office, you\u2019ll have access to everything you\u2019d expect from a world-class employer, such as a modern working environment, agile spaces, private quiet rooms and breakout areas. Plus, all our offices are located in iconic city centres, close to everything you might need for a rewarding working experience. You will be based in London, with the flexibility to work from home 3 days a week. You will be working with designers, developers and product teams based in Poland, Bangalore South Africa and more. Join IG, and you\u2019ll be joining the best in an always-moving industry.</p>\n<h2 id=\"how-youll-grow\">How you\u2019ll grow</h2>\n<p>Your personal and professional development are important to us. As a company that\u2019s constantly redefining the boundaries of possibility, we\u2019ll challenge you to push yourself, accelerate your ambitions and rise to new levels of excellence. We know that\u2019s a big ask, so we\u2019ll make sure that you\u2019re supported all the way, getting the backing you need and the recognition you deserve. If you connect with our vision and can get behind it, you\u2019ll be rewarded with countless opportunities to experience new things and enhance your abilities. As part of a Global Marketing Function, we have expertise across marketing strategy, planning and management, Brand, CRO, PPC, Affiliates, partnerships, Design, SEO, Martech, Video and much more. There are plenty of opportunities for on-the-job experiences across other disciplines, teams and training / resources to support your development and career ambitions. We also offer 360 performance reviews to help frame a career development and put the right people and support to empower you in this journey.</p>\n<h2 id=\"from-the-team\">From the team</h2>\n<p>&quot;IG is a very dynamic business due to the nature of the industry, which makes it very exciting and driven. Monotony is a rare thing here!&quot; &quot;Great culture, open leadership and friendly environment overall.&quot;</p>\n<h2 id=\"about-us\">About Us</h2>\n<p><strong>Looking for a career at a company that will support you, challenge you and help you grow?  IG Group can provide that.</strong></p>\n<p>We&#39;re the market leader in financial derivatives trading, with a focus on innovation and advanced IT development.  We&#39;re also one of Britain&#39;s Top Employers, a ten-year trend we intend to continue.</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1129, "index": "1129", "job_title": "Senior Experience Designer", "employer": "Sainsbury\u2019s", "publish": "TRUE", "publication_date": "Thu, 2 Feb \u201923", "unpublished_date": "", "expiration_date_calculated": "15 Feb", "original_job_description": "https://dtd.sainsburys.jobs/vacancies/2765/", "job_id": "ppaqigg73", "logo_link": "/jobs/logos/Sainsburys-logo.svg", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://dtd.sainsburys.jobs/vacancies/2765/apply/", "paid_ad": "", "accepting_applications": "2 Feb", "extended_description": "<p><strong>At Sainsbury\u2019s we believe that the customer should be at the heart of everything we do.</strong></p>\n<p>Customer Experience\u2019s vision is to create the easiest, most enjoyable experiences that better serve our customers\u2019 ever-changing needs. We work across a range of services, products, touchpoints and tools to deliver distinctive, integrated, and consistent experiences for our customers and colleagues across Sainsbury\u2019s Group (which includes Sainsbury\u2019s Food, Argos, Bank, Nectar, Tu and Habitat).</p>\n<p>We drive brilliant experiences across all our brands in-store and online, operating in agile teams and squads, working seamlessly with teams right across the business to make the most of the exceptional knowledge, insight and talent we have.</p>\n<p>As a Staff Experience Designer you\u2019ll lead on some of our most complex design challenges spanning brands and channels to create outstanding customer and colleague experiences. You\u2019ll bring together colleagues from different parts of the business to map out strategic design-led approaches and galvanise them around your vision.</p>\n<p>As an individual contributor, you\u2019ll be a master of your discipline and have the passion and drive to share this with others inside and outside the team, building our capabilities in our craft, and leading on the high standards we set ourselves.</p>\n<p>You\u2019ll lead demonstrate thought leadership within your specialism and lead a community of practice to ensure the whole team benefits from your expertise. You\u2019ll influence at the highest levels of the business and use excellent storytelling and problem solving skills to raise the bar for Customer Experience.  </p>\n<p>Within the Customer Experience team you will have the opportunity to work in a dynamic environment in a sector that is going through unprecedented digital transformation, as well as a commitment to work with you to drive your development. We also offer a collaborative culture, a flexible approach to working and lots of colleague benefits.</p>\n<h2 id=\"what-you-need-to-do\">What you need to do</h2>\n<ul>\n<li>Identify, define and deliver solutions and opportunities for new propositions, services, products and experience areas that deliver value to customers and colleagues and are directly aligned with Sainsbury\u2019s Group vision and KPIs</li>\n<li>Lead all phases of user-centred design through a data-informed, test-and-learn approach</li>\n<li>Champion the voice of the user through your work, organising and conducting user research and user testing to inform concepts and validate designs, and bringing stakeholders on the same journey</li>\n<li>Consider the wider Sainsbury\u2019s ecosystem when designing concepts and solutions that are aligned with our strategic vision of allowing our customers to shop whenever and however they want</li>\n<li>Lead and manage stakeholders and project teams through a user-centred design approach whilst balancing business challenges and strategic vision</li>\n<li>Influence senior stakeholders up to director level and negotiate as needed with internal and external teams to ensure alignment on the customer experience vision for your area</li>\n<li>Run workshops with cross-functional teams to inspire user-centred design thinking</li>\n<li>Inspire, coach and motivate junior members of the design community</li>\n<li>Work with the Guidelines team to continuously evolve our design system and guidelines and champion their adoption and implementation</li>\n<li>Consistently embed inclusive design principles in your work and encourage throughout the team</li>\n<li>Work comfortably in or out of product teams, and proactively collaborate with cross-functional teams, championing best practice for design thinking in an agile environment</li>\n<li>Lead a community of practice in your specialism to ensure the whole team benefits</li>\n</ul>\n<h2 id=\"what-you-need-to-know-and-show\">What you need to know and show</h2>\n<ul>\n<li>Track record of influencing at the highest levels of the business</li>\n<li>Excellent storytelling and problem solving skills</li>\n<li>Demonstrate thought leadership within your area of specialism</li>\n<li>You will bring a wealth of knowledge with you as a previous Product, Service, UX or UI designer, ideally for a big brand</li>\n<li>High level of creativity, problem-solving skills</li>\n<li>Adept at collaborating with and influencing stakeholders through a range of agile methods, including workshops \u2013 championing the voice of the customer whilst balancing business objectives</li>\n<li>Utilise a broad range of UX tools and techniques with portfolio evidence of these deliverables</li>\n<li>A thorough technical understanding of inclusive design frameworks</li>\n<li>Expert skills with Figma, and rapid prototyping tools</li>\n<li>Knowledge of best practices and emerging digital and retail technologies and trends</li>\n<li>Wide range of experience in user-centred design and usability best practices</li>\n<li>Methods and practices of usability research and confidence in conducting research and interpreting results</li>\n<li>Ability to demonstrate the behavioural competencies of this role, including initiative, flexibility, influencing, negotiating, strong communication skills and ability to deal with ambiguity</li>\n<li>An outstanding portfolio, showcasing your talent, skills, process and experience</li>\n<li>Proactive collaboration with the Head of Experience Design on design strategy</li>\n<li>Proactive collaboration with project teams, the design community and senior stakeholders alike</li>\n<li>Ability to manage multiple, changing priorities, and work with diverse personalities and complex dynamics</li>\n</ul>\n<h2 id=\"what-decisions-i-can-make-including-budget\">What decisions I can make including budget</h2>\n<ul>\n<li>Design decisions that improve the customer\u2019s user experience</li>\n</ul>\n<h2 id=\"directly-or-indirectly-manages\">Directly or indirectly manages</h2>\n<ul>\n<li>This is not a line management role, but you will guide and mentor colleagues in your area of expertise</li>\n</ul>\n<h2 id=\"support-we-will-provide\">Support we will provide</h2>\n<ul>\n<li>Include the resources available e.g. Sainsbury\u2019s intranet (OurSainsburys)</li>\n<li>Sainsbury\u2019s L&amp;D, line management support</li>\n<li>A thriving design culture, opportunity to discuss and share work with open, collaborative feedback</li>\n<li>A mature design system and set of standards to work with</li>\n<li>Research, accessibility and UX copywriting expertise</li>\n</ul>\n<h2 id=\"in-return-youll-get\">In return you\u2019ll get</h2>\n<ul>\n<li>Colleague discount across the multi-brands \u2013 Sainsbury\u2019s, Argos and Habitat</li>\n<li>Holiday allowance</li>\n<li>Bonus scheme</li>\n<li>Pension plan</li>\n<li>Special offers on gym memberships, restaurants, holidays, retail vouchers and more</li>\n</ul>\n<p>Flexible working and job share conversations are encouraged. Across our multi-brands, we\u2019re proud to be an equal opportunities employer that champions a diverse and inclusive culture. If you\u2019re reading this, even if you\u2019re not 100% sure you\u2019re there with your experience, we\u2019d still love to hear from you. If you\u2019d like to find out more head to <a href=\"https://sainsburys.jobs/roles/digital-tech-data/digital/\">Sainsbury&#39;s Digital</a></p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1130, "index": "1130", "job_title": "Interaction Designer", "employer": "Parliamentary Digital Service", "publish": "TRUE", "publication_date": "Thu, 2 Feb \u201923", "unpublished_date": "", "expiration_date_calculated": "15 Feb", "original_job_description": "https://housesofparliament.tal.net/vx/lang-en-GB/mobile-0/appcentre-11/brand-2/user-17436/xf-7dfa741c7ebf/candidate/so/pm/3/pl/14/opp/4099-Interaction-Designer/en-GB", "job_id": "oyssjew33", "logo_link": "/jobs/logos/PDS_2306_PDSlogo.png", "location": "London, Hybrid", "apply_by_date": "", "work_pat": "Permanent", "money_min": "\u00a343,000", "money_max": "\u00a349,690", "money": "\u00a343000-49690", "money_median": "46,345", "rank": "0.5", "money_indication": "", "show_salary": "TRUE", "apply_link": "https://housesofparliament.tal.net/vx/lang-en-GB/mobile-0/appcentre-11/brand-2/user-17436/xf-7dfa741c7ebf/candidate/so/pm/3/pl/14/opp/4099-Interaction-Designer/en-GB", "paid_ad": "", "accepting_applications": "2 Feb", "extended_description": "<h2 id=\"the-opportunity\">The Opportunity</h2>\n<p>Your digital skills can make a lasting difference to Britain\u2019s democracy. By introducing best practice in User Experience and User Interface design, we can make Parliament more open and accessible and streamline decision-making at every level. So you\u2019ll have a vital role to play at UK Parliament. </p>\n<p>Delivering designs that are informed by customer needs, organisational requirements and the technical landscape, you will: </p>\n<ul>\n<li>take a user-centred approach to the creation of UI/UX work for products and services</li>\n<li>apply evidence to rationalise your design decisions, challenge assumptions and influence delivery teams and stakeholders</li>\n<li>engage your entire team in the design process</li>\n<li>create rapid prototypes to validate design concepts</li>\n<li>enhance the design and delivery process by embedding agile practices</li>\n<li>promote knowledge sharing within and across teams</li>\n<li>champion inclusivity, ensuring that designs meet accessibility, legal and quality standards</li>\n</ul>\n<h2 id=\"what-you-need\">What You Need</h2>\n<p>We need you to make things happen every day, so you will require: </p>\n<ul>\n<li>experience of user-centred design involving insights from qualitative and quantitative research </li>\n<li>strong UI/UX skills and a proven record of contributing to design systems</li>\n<li>demonstrable flair for facilitating multidisciplinary design, gathering feedback and managing conflicting perspectives</li>\n<li>exceptional ability to engage and enthuse stakeholders</li>\n<li>familiarity with agile working, tools and methodologies</li>\n<li>the ability to pass security clearance, backed by the right to work in the UK</li>\n</ul>\n<h2 id=\"about-the-team\">About The Team</h2>\n<p>Our Customer Experience Design Team brings together User Researchers, Performance Analysts, Service Designers, Interaction Designers and Product Managers to empower stakeholders across Parliament to understand customers, take key decisions and design effective digital solutions that meet user needs and expectations. Whatever the context or channel, we\u2019re here to align activity with evolving needs, champion creativity and find outcomes that take innovation to the next level. </p>\n<h2 id=\"about-us\">About Us</h2>\n<p>UK Parliament is steeped in history and tradition. It is an important part of UK life and we need to ensure as many people as possible can engage with its work. This is why we are at the start of a huge transformation programme powered by technology. The Parliamentary Digital Service (PDS) works with the House of Commons and the House of Lords with all their IT and digital needs. We are here to realise the digital ambitions of a modern Parliament and welcome you to join us in building a digital democracy.</p>\n<h2 id=\"our-package\">Our Package</h2>\n<p>Please refer to our Candidate Information Pack for a full list of our benefits which include:</p>\n<ul>\n<li>up to 35 days annual leave in addition to bank holidays</li>\n<li>generous maternity pay policy up to 6 months full pay</li>\n<li>great pension scheme options (contributory and non-contributory)</li>\n<li>on-site subsidised gym, nursery, catering, post office, travel office and GP</li>\n<li>flexible options including hybrid working and family friendly policies</li>\n</ul>\n<h2 id=\"how-to-apply\">How To Apply</h2>\n<p>Please make sure you&#39;re clear on the requirements of the role. These can be found in the Job Description and Candidate Information Pack.  You will need to upload a CV and complete a supporting statement demonstrating how you meet criterions 1, 2 and 3.  If you would like to share your portfolio feel free to add the link to you CV.  Our application process is anonymous, so please remove any personal information from your CV.</p>\n<p><strong>Apply By</strong>: 15th February 2023 at 23:55</p>\n<p><strong>Interviews</strong>: TBC</p>\n<p><strong>Format</strong>: Presentation + Panel Interview (Remote)</p>\n<h2 id=\"our-culture\">Our Culture</h2>\n<p>For our people, we provide an amazing opportunity to bring their talents to an institution that sits right at the heart of society in the UK. We are helping to change UK Parliament and strengthen democracy. What matters here is your potential for growth and your commitment to playing your part in our ongoing success.</p>\n<p>We are passionate about providing an environment which promotes inclusion, diversity and equality. Regardless of your age, gender, ethnicity, beliefs or any of the other things that make you, you. We welcome applications from people who feel under-represented in the workforce. This includes those who may feel disadvantaged because of their socioeconomic circumstances.</p>\n<h2 id=\"job-description\">Job Description</h2>\n<p><a href=\"https://housesofparliament.tal.net/vx/lang-en-GB/mobile-0/appcentre-11/brand-6/user-399556/xf-7dfa741c7ebf/candidate/download_file_opp/4099/20709/1/0/64395526f05c0ed0275b5ec6f3899ec4445113a2\">Interaction Designer - Job Description.docx</a> \u2013 73KB \n<a href=\"https://housesofparliament.tal.net/vx/lang-en-GB/mobile-0/appcentre-11/brand-6/user-399556/xf-7dfa741c7ebf/candidate/download_file_opp/4099/20709/1/1/64395526f05c0ed0275b5ec6f3899ec4445113a2\">Converted File Interaction Designer - Job Description.docx.pdf</a> \u2013 89KB </p>\n<h2 id=\"additional-file\">Additional File</h2>\n<p><a href=\"https://housesofparliament.tal.net/vx/lang-en-GB/mobile-0/appcentre-11/brand-6/user-399556/xf-7dfa741c7ebf/candidate/download_file_opp/4099/20710/1/0/c0f4297b3b70ed97b4ecd28d0b35770160f70d37\">Candidate Information Pack.pdf</a> \u2013 1125KB </p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1132, "index": "1132", "job_title": "UX Designer", "employer": "Kleene", "publish": "TRUE", "publication_date": "Fri, 3 Feb \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://careers.kleene.ai/jobs/2406612-ux-designer", "job_id": "hyuue73", "logo_link": "/jobs/logos/kleene-logo2.png", "location": "London, Hybrid", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://careers.kleene.ai/jobs/2406612-ux-designer", "paid_ad": "", "accepting_applications": "3 Feb", "extended_description": "<h2 id=\"the-company\">The Company</h2>\n<p>Kleene is accelerating the journey for businesses to be data driven. We believe that modern businesses can grow faster, be more efficient and empower their employees by making data easily available. Working with data is slow, complicated and expensive and Kleene is on a mission to create change. We have seen rapid growth in 2021, announcing a $14m Series A 2021 in November. This is an opportunity to join a high-growth startup and have a significant impact at an early stage.</p>\n<h2 id=\"the-role\">The Role</h2>\n<p>We are looking for a UX Designer that knows B2B SaaS, has some experience of the data space, and is able to understand our business requirements and any technical limitations, as well as be responsible for conceiving and conducting user research, interviews and surveys, and translating them into sitemaps, user flows, customer journey maps, wireframes, mockups and prototypes.</p>\n<p>As a Senior UX Designer you will:</p>\n<ul>\n<li>Understand product specifications and user psychology</li>\n<li>Translate concepts into user flows, wireframes, mockups and prototypes that lead to intuitive user experiences.</li>\n<li>Find creative ways to solve UX problems (e.g. usability, findability)</li>\n<li>Conduct concept and usability testing and gather feedback</li>\n<li>Define the right interaction model and evaluate its success</li>\n<li>Develop personas through user research and data</li>\n<li>Take a user-centered design approach and rapidly test and iterate your designs.</li>\n<li>Communicate design ideas and prototypes to developers</li>\n<li>Identify design problems and devise elegant solutions.</li>\n<li>Keep abreast of competitor products and industry trends</li>\n<li>Ask smart questions, take risks and champion new ideas.</li>\n</ul>\n<h2 id=\"the-ideal-candidate\">The Ideal Candidate</h2>\n<p>You are a creative, outcome driven person, who knows that in a startup, your role often involves a wide range of responsibilities and change is a healthy part of a growing business.</p>\n<p>You\u2019re used to experimenting, with a Lean Build-Measure-Learn mentality who is not afraid test radical approaches to solving the problems we face.</p>\n<ul>\n<li>Three or more years of UX design experience. Preference will be given to candidates who have experience designing complex solutions for complete digital environments.</li>\n<li>A solid grasp of user-centered design (UCD), planning and conducting user research, user testing, rapid prototyping, heuristic analysis, usability and accessibility concerns.</li>\n<li>Ability to iterate designs and solutions efficiently and intelligently.</li>\n<li>Ability to clearly and effectively communicate design processes, ideas, and solutions to teams and clients.</li>\n<li>Strong portfolio of design projects</li>\n<li>Proficient in design software (e.g. Figma, Miro)</li>\n<li>Analytical mind with a business acumen</li>\n<li>Excellent communication skills</li>\n<li>Ideally a BSc in Design, Computer Science, Engineering or a related field</li>\n<li>Knowledge of HTML/CSS; JavaScript and SQL (we\u2019re a data company!) is a plus</li>\n<li>Proven ability to work independently in high pressure, fast growth environment</li>\n</ul>\n<h2 id=\"perks--benefits\">Perks &amp; Benefits</h2>\n<ul>\n<li>We provide daily breakfast plus on Thursdays there is a breakfast club and drinks for the entire company to get together</li>\n<li>Hybrid working, we trust you to get the job done wherever you are but also have a brilliant office complete with roof terrace for you to use</li>\n<li>Choose your own laptop</li>\n<li>Team and company socials, both online and in person</li>\n<li>Workplace pension</li>\n<li>25 days holidays (ex bank holidays) including holiday roll-over and \u2018floating days\u2019 to celebrate alternative holidays to Christmas and Easter</li>\n<li>Mental health is a priority so everyone gets a free Headspace or Mindler subscription</li>\n<li>Cycle to work scheme for all the cyclists out there</li>\n<li>We are all owners and get stock options in the company</li>\n<li>Brilliant development opportunities as we scale quickly</li>\n<li>More benefits as we and you think of them!</li>\n</ul>\n<h2 id=\"join-our-team\">Join our Team</h2>\n<p>At Kleene, we\u2019re on a mission to help businesses leverage data in decision-making. </p>\n<p>Our fast growing team is based out of our London hub but we have a global presence in over 15 countries. We work hard and have fun while we do it with a dedicated Culture Team that champions the Kleene community across the world. </p>\n<p>We are always on the look out for driven, ambitious individuals who are looking for a role where they can make a real difference. We are building an inclusive culture where everyone can succeed and we strongly encourage candidates of all different backgrounds and identities to apply, especially those who are underrepresented in tech. </p>\n<h2 id=\"our-values\">Our values</h2>\n<ul>\n<li><strong>Curiosity</strong>\u2013We are open to new ideas and maintain the desire to learn</li>\n<li><strong>Trust</strong>\u2013We take ownership, work as a team and empower each other</li>\n<li><strong>Customer first</strong>\u2013We are driven by building outstanding customer value fast</li>\n<li><strong>Get it done</strong>\u2013We work hard, and have a bias for action</li>\n</ul>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1133, "index": "1133", "job_title": "UX Designer", "employer": "University of Westminster", "publish": "TRUE", "publication_date": "Mon, 6 Feb \u201923", "unpublished_date": "", "expiration_date_calculated": "12 Mar", "original_job_description": "https://vacancies.westminster.ac.uk/Hrvacancies/default.aspx?id=50061911", "job_id": "pjsueuej09", "logo_link": "/jobs/logos/Uni-of-westminster-logo.svg\n", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "\u00a337,367", "money_max": "", "money": "\u00a337367", "money_median": "37,367", "rank": "0.2", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://vacancies.westminster.ac.uk/Hrvacancies/default.aspx?id=50061911", "paid_ad": "", "accepting_applications": "6 Feb", "extended_description": "<p>As part of our Digital Team, reporting to and collaborating closely with our Senior UX Designer, you\u2019ll be focused on the critical work that underpins almost everything we do on our website \u2013 understanding our website users in detail and how we can best serve them.</p>\n<p>You\u2019ll be developing and deploying a variety of UX tools, techniques and strategies to this end, including user personas and journey maps, remote and in-person usability testing and interviews, and online tools for heatmapping, A/B testing and more. You\u2019ll also work closely with our Web Analyst to leverage our Google Analytics data, combining qualitative and quantitative data to fully understand the what, why and how of user behaviour on our site.</p>\n<p>You\u2019ll use wireframing and/or prototyping tools to mock up, demonstrate and test your ideas and you\u2019ll present your user research findings and design proposals to a variety of colleagues and stakeholders, so strong communication and presentation skills are essential.</p>\n<p>In collaboration with our Senior UX Designer and Front-End Developer, you\u2019ll also work on the maintenance and development of our website UI, liaising with the separate Design Team in our department to ensure brand consistency.\nThe Digital Team is made up of 13 people and we\u2019re responsible for the University\u2019s public website. \nWe work across web analytics, content, design (UI and UX) and development (front- and back-end), using an Agile framework (and the project management tool JIRA) to organise and deliver much of our work.</p>\n<p>We have a Smart Working Policy in the team that allows for significant hybrid working. Most of our communication and collaboration is now conducted online, via MS Teams, but we also have a central London office (next to Oxford Street) that we share with colleagues from both our wider Global Recruitment, Admissions, Marketing and Communications department, as well as other Professional Services departments.</p>\n<p>More information about this role can be found in the job description and person specification. </p>\n<p>If you\u2019d like an informal discussion to find out more about the role, you\u2019re welcome to contact our Senior UX Designer, Danilo Tumminello <a href=\"mailto:http://d.tumminello@westminster.ac.uk/\">d.tumminello@westminster.ac.uk</a> </p>\n<p><strong>At the University of Westminster, diversity, inclusion and equality of opportunity are at the core of how we engage with students, colleagues, applicants, visitors and all our stakeholders.</strong> </p>\n<p><strong>We are fully committed to enabling a supportive and safe learning and working environment which is equitable, diverse and inclusive, is based on mutual respect and trust, and in which harassment and discrimination are neither tolerated nor acceptable.</strong></p>\n<p><em>The University has adopted Smart Working principles to support and further our Equality, Diversity and Inclusion aims of being an inclusive, collaborative and flexible employer. Further details of Smart Working can be discussed at interview stage.</em></p>\n<p>Closing date: midnight on 12 March 2023</p>\n<p>Interviews are likely to be held in: Week commencing 20 March 2023</p>\n<p>Administrative contact (for queries only): <a href=\"mailto:http://recruitment@westminster.ac.uk/\">recruitment@westminster.ac.uk</a> </p>\n<p><a href=\"https://vacancies.westminster.ac.uk/hrvacancies/Information/50061911/JDPS-%20UX%20Designer.pdf\"><strong>JOB DESCRIPTION AND PERSON SPECIFICATION</strong></a></p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1134, "index": "1134", "job_title": "Senior Product Designer", "employer": "Spring", "publish": "TRUE", "publication_date": "Mon, 6 Feb \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://apply.workable.com/spring-17/j/D3087A0C19/", "job_id": "zodjdhd99", "logo_link": "/jobs/logos/spring-logo-1.png", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://apply.workable.com/spring-17/j/D3087A0C19/apply/", "paid_ad": "", "accepting_applications": "6 Feb", "extended_description": "<h2 id=\"description\">Description</h2>\n<p><strong>Spring is a green mission-led start-up with currently a team of 40+ brilliant people.</strong></p>\n<p>Our mission is to change the way we all use technology as everyday thousands of forgotten tech devices waste potential, lose value, and add pressure on the planet. The world currently generates 50 million tonnes of e-waste every year and that figure is set to double by 2050.</p>\n<p>We want to allow everyone to give old tech a new life while saving the environment by reducing e-waste going into landfills and CO2 emissions. You can now easily sell, recycle, and trade in your old tech, through our self-service machines (Pods).</p>\n<p>We have secured Series A private equity funding and contracts with major national retailers, Morrisons &amp; Co-Op.</p>\n<p>We are really proud of the astonishing results we have achieved so far but this is just the beginning! With an exciting future ahead there wouldn&#39;t be a better time to join us as we have great projects for the future, and we are really determined to succeed! We want someone who shares our values, who breaths our culture, and who is willing to leave a mark on a more sustainable future.</p>\n<p>Come and join our vibrant and passionate team who are looking to transform the world of consumer electronics: Let&#39;s make a difference together!</p>\n<p>Find out more about us at <a href=\"https://spring.co.uk/discover\">spring.co.uk</a></p>\n<h2 id=\"the-role\">The Role</h2>\n<p>As a Senior Product Designer at Spring, there&#39;ll be a healthy blend of green and existing products to develop. These include our intuitive customer dashboard, website and our in-store Pods. You&#39;ll collaborate with our UX researcher to gather customer insights and competitor analysis. Using these insights, you will develop business solutions that will solve complex user issues and improve the experiences for our customers. Creating user personas, wireframes, prototypes and then working closely with our product designers, you&#39;ll oversee the delivery of these products, from conceptualisation to launch.</p>\n<p>As a Senior within the team, you&#39;ll contribute towards the overall design system for Spring, alongside the Head of Design, applying user-experience research and design thinking to create great experiences.</p>\n<p>Spring is an environment that gives you opportunity to create innovative digital products that have a direct, positive impact on the planet. Using AI and Machine Learning, we are changing the buying behaviours of our customers, one pre-loved device at a time.</p>\n<h2 id=\"youll-love-this-role-if-you\">You&#39;ll love this role if you</h2>\n<ul>\n<li>Think creatively to solve user problems, thinking of the customer throughout the design process</li>\n<li>Can build wireframes and prototypes with your eyes closed, confident in your ability as a designer</li>\n<li>Enjoy collaborating across teams to drive a better end experience for customers, building products with high impact</li>\n<li>You truly love end-to-end design thinking, from research to UX and creating beautiful UI designs.</li>\n<li>make use of tools such as Figma and the Adobe Suite, such as Illustrate and Photoshop</li>\n</ul>\n<h2 id=\"benefits\">Benefits</h2>\n<ul>\n<li>A vibrant space in the heart of Shoreditch</li>\n<li>unlimited holiday each year</li>\n<li>matched pension scheme</li>\n<li>speedy career progression on offer, where you\u2019ll contribute towards creating products that make a better world for all of us</li>\n<li>discounted gym memberships through GymPass for you and the family</li>\n<li>an opportunity to join an ambitious and growing tech start-up, centred around sustainability</li>\n</ul>\n<p>At Spring, we want to strive for a world of inclusivity and diversity. We thrive on a culture of creativity where individuality is valued. We approach our work fearlessly, learn quickly, improve constantly and celebrate our wins at every turn. As an inclusive workplace, our team are comfortable bringing their authentic whole selves to work. Be you.</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1135, "index": "1135", "job_title": "UX Designer", "employer": "Otto Car", "publish": "TRUE", "publication_date": "Mon, 6 Feb \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://uiuxjobsboard.com/job/666723-ux-designer-london-united-kingdom", "job_id": "kdgdte73", "logo_link": "/jobs/logos/otto-cars-logo.png", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "mailto:nil@ottocar.co.uk", "paid_ad": "", "accepting_applications": "6 Feb", "extended_description": "<h2 id=\"about-us\">About us</h2>\n<p>We&#39;re helping to change the fabric of how we move in our cities one car at a time. Otto Car is a fast growing fleet operator and enabler, helping passengers and drivers get around safely and sustainably. We help private hire drivers and Uber partners get on the road so they can achieve their goals. </p>\n<h2 id=\"our-story\">Our Story</h2>\n<p>Otto Car started with just one car in a garage five years ago. We&#39;re proud to say that we are now the biggest fleet of PCO cars in Europe, with over 3,500+ cars on the road in London alone, and for the last 3 years one of the UK\u2019s fastest growing companies. We&#39;ve helped over 10,000+drivers get on the road, and the numbers are growing every day. </p>\n<p>Owning a car is often taken for granted, but for many people, the simple act of providing an affordable and sustainable means of car ownership represents the path to financial and social freedom. </p>\n<p>At Otto Car, you will not only be a part of this positive mission, where you will see the physical results of your work on a daily basis, but you will also be in a supportive environment, with plenty of opportunities to grow within the company. </p>\n<h2 id=\"you\">You</h2>\n<ul>\n<li>are passionate about sustainable mobility</li>\n<li>are motivated to improve road safety, specifically by improving driver standards</li>\n<li>aren\u2019t afraid to share your opinion</li>\n<li>like to figure out how to fix it instead of who to blame</li>\n<li>are down to earth, enjoy being part of something bigger</li>\n<li>care about the environment</li>\n<li>devote yourself to what you love, and never want to stop</li>\n</ul>\n<h2 id=\"we\">We</h2>\n<ul>\n<li>are a big family that helps each other out</li>\n<li>aren\u2019t afraid to make mistakes</li>\n<li>like real food and hate pollution</li>\n<li>care more about your intelligence and values and welcome people from a variety of experience levels and backgrounds.</li>\n<li>want to make our mother\u2019s proud</li>\n</ul>\n<p>We are a passionate team with huge ambition. We&#39;re growing fast, and we want to build an inclusive, healthy and sustainable business.</p>\n<p>We are looking for a UX designer that shares our passion for sustainable and safe mobility. You will be leading the design concept creation and delivery for autonomous fleet management applications, leveraging the latest AI technology, working to bring better mobility, safer and cleaner streets to our cities.</p>\n<h2 id=\"your-responsibilities\">Your responsibilities</h2>\n<ul>\n<li>Translate concepts into user flows, wireframes, mockups and fully designed prototypes that lead to intuitive user experiences.</li>\n<li>Facilitate our product vision by researching, conceiving, sketching, prototyping and user-testing experiences for our digital products.</li>\n<li>Design and deliver wireframes, user stories, user journeys, and mockups optimized for a wide range of devices and interfaces.</li>\n<li>Identify design problems and devise elegant solutions.</li>\n<li>Make strategic design and user-experience decisions related to core, and new, functions and features.</li>\n<li>Take a user-centered design approach and rapidly test and iterate your designs.</li>\n<li>Collaborate with other team members and stakeholders.</li>\n<li>Ask smart questions, take risks and champion new ideas.</li>\n</ul>\n<h2 id=\"requirements\">Requirements</h2>\n<ul>\n<li>Three or more years of UX design experience. Preference will be given to candidates who have experience designing complex solutions for complete digital environments.</li>\n<li>Expertise in and extensive experience using Figma is required. Basic HTML5, CSS3, and JavaScript skills are a plus.</li>\n<li>Ability to work with stakeholders to understand detailed requirements and design complete user experiences that meet drivers and passenger needs and our vision.</li>\n<li>Extensive experience in using UX design best practices to design solutions, and a good understanding of mobile-first and responsive design.</li>\n<li>A solid grasp of user-centered design (UCD), user testing, A/B testing, rapid prototyping, heuristic analysis, usability and accessibility concerns.</li>\n<li>Ability to work effectively in a team setting including synthesizing abstract ideas into concrete design implications.</li>\n<li>Be excited about collaborating and communicating closely with teams and other stakeholders, to regularly deliver design solutions for approval.</li>\n<li>Be passionate about resolving user pain points through great design.</li>\n<li>Be passionate about all things UX and other areas of design and innovation.</li>\n<li>A strong portfolio that demonstrates a high bar for aesthetics and visual design, tangible impact to user experience, and connection of your efforts towards user and business outcomes.</li>\n</ul>\n<p>We are a small but passionate team delivering something completely revolutionary.</p>\n<p>We believe a great workplace is one that represents the wonderfully diverse world we live in. All you need is a passion for what you do, strong team spirit and a desire to be part of a fast-growing start-up in an inspiring space.</p>\n<h2 id=\"working-with-us-you-will\">Working with us, you will</h2>\n<ul>\n<li>You will join a passionate team with a high-performance but a friendly culture of open communication, collaboration and diversity.</li>\n<li>You will have the chance to influence how we deliver our products and services from customer operations to design.</li>\n<li>You will shape the technology roadmap and culture for our company for years to come.</li>\n<li>Clear career progression and access to mentorship.</li>\n<li>Competitive salary + 20 days holiday</li>\n</ul>\n<h2 id=\"diversity--inclusion\">Diversity &amp; Inclusion</h2>\n<p>We believe in embracing diversity in all forms and fostering an inclusive environment for all people to do their best work with us.  We&#39;re an equal opportunity employer. All applicants will be considered for employment without attention to ethnicity, religion, sexual orientation, gender identity, family or parental status, national origin, veteran, neurodiversity status or disability status.</p>\n<p>Diversity and inclusion are a priority for us \u2013 if we want to solve problems for people worldwide, our team has to represent our customers. So we need to attract the best talent and create an environment that supports and includes them.</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1136, "index": "1136", "job_title": "Senior UX Designer", "employer": "Simplyhealth", "publish": "TRUE", "publication_date": "Tue, 7 Feb \u201923", "unpublished_date": "", "expiration_date_calculated": "17 Feb", "original_job_description": "https://careers.simplyhealth.co.uk/vacancies/2054/senior-ux-designer.html", "job_id": "oogtew87", "logo_link": "/jobs/logos/simplyhealth-logo.svg", "location": "London", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "\u00a390,000", "money": "-90000", "money_median": "90,000", "rank": "1.0", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://careers.simplyhealth.co.uk/login.aspx", "paid_ad": "", "accepting_applications": "7 Feb", "extended_description": "<h2 id=\"about-the-role\">About The Role</h2>\n<p>Simplyhealth \u2013 the UK\u2019s first B Corp Health Insurer \u2013 have built and launched a new venture as part of our existing portfolio of companies. We are on a mission to lower barriers to affordable healthcare and improve patient choice, with an exciting new business sitting at the heart of our new digitalisation and venture building strategy; Boost. Empowering practitioners to give patients the finance and confidence to get the care they need.  </p>\n<p>Boost has been set up to tackle problems faced by healthcare practitioners and their patients. There is a fantastic opportunity to be part of the journey to create and scale a multi-product business across health financing, treatment support, Continuing Professional Development (CPD) provision and compliance.</p>\n<p>Sitting at the core of our commitment to digitise, we will serve a large, fragmented market, with an innovative new offering to improve outcomes for both patients and healthcare practitioners.</p>\n<p>To achieve these goals, we\u2019re now hiring a Senior UX Designer to work with our leadership team to take Boost to the next level. </p>\n<h2 id=\"about-you\">About You</h2>\n<h3 id=\"what-youll-be-responsible-for-as-senior-ux-designer\">What you\u2019ll be responsible for as Senior UX Designer</h3>\n<ul>\n<li>Develop the long-term product vision in close collaboration with the Head of Product\u2020</li>\n<li>Plan, conceptualise, and set up user research and product testing, including feature discovery and usability testing (both qualitative and quantitative)</li>\n<li>Work closely with designers, product managers, and software engineers to translate insights from research into wireframes, prototypes, and features specifications</li>\n<li>Create and iterate versions based on feedback and learnings, with a good understanding of when to apply attention to detail and when rough scribbles and prototypes will suffice</li>\n<li>Ensure a consistent user experience throughout the entire user journey by creating innovative interface concepts, paying close attention to information architecture, user experience and interaction design</li>\n</ul>\n<h3 id=\"you-should-have\">You should have</h3>\n<ul>\n<li>Strong UX experience, preferably in a (B2B/SaaS) startup, tech company and/or agile environment</li>\n<li>Experience of defining UX wireframes in parallel with UI at pace</li>\n<li>Strong background in putting together prototypes</li>\n<li>Experience in user testing, qualitative face to face interviews and unmoderated testing in an online environment (set up and run)</li>\n<li>Copywriting and content experience - working with 3rd party vendors to build out content library</li>\n<li>Experience in B2B2C organisations is ideal</li>\n<li>Experience with Figma</li>\n<li>Strong interpersonal and teaming skills, empathy and willingness to work in interdisciplinary teams alongside Product Managers and Software Engineers</li>\n<li>Excellent communication skills in English, in order to clearly explain design decisions and processes to stakeholders</li>\n</ul>\n<p>\u2020Role is in process of being filled. Our consultancy partner will support in the interim.</p>\n<h2 id=\"your-recruitment-journey\">Your Recruitment Journey</h2>\n<p>We\u2019re focused on providing an application, assessment and onboarding journey that is fair, consistent, diverse and inclusive for all, allowing us to hire top talent based on the skills and behaviours pivotal to your and our success.</p>\n<p>We use a number of techniques to help us select successful candidates, these form part of each review and will vary according to the role. We provide details in advance to help you prepare, but these may include:</p>\n<ul>\n<li>Screening call</li>\n<li>Dynamic interview</li>\n<li>Verbal and numerical assessment</li>\n<li>Psychometric assessment</li>\n<li>Presentation and/or case study</li>\n</ul>\n<p>If successful, we\u2019ll contact you to tell you the great news of your offer and welcome you to Boost, followed by details of your conditional offer of employment. The offer will be subject to our pre-employment checks, completed by our 3rd party partner Experian, which include a basic disclosure and barring service (DBS) and credit check.</p>\n<p>Please contact our Talent Acquisition Team if you have any questions; <a href=\"mailto:talentacquisitionteam@simplyhealth.co.uk\">talentacquisitionteam@simplyhealth.co.uk</a></p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1137, "index": "1137", "job_title": "Senior Product Designer", "employer": "American Express", "publish": "TRUE", "publication_date": "Tue, 7 Feb \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://aexp.eightfold.ai/careers/job/15118121?domain=aexp.com", "job_id": "paqiifhy78", "logo_link": "/jobs/logos/American-Express-logo.svg", "location": "London, Hybrid", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://axp.taleo.net/careersection/2/jobapply.ftl?job=23001757&lang=en", "paid_ad": "", "accepting_applications": "7 Feb", "extended_description": "<h2 id=\"you-lead-the-way-weve-got-your-back\">You Lead the Way. We\u2019ve Got Your Back.</h2>\n<p>With the right backing, people and businesses have the power toprogress in incredible ways. When you join Team Amex, you become part of a global and diverse community of colleagues with an unwavering commitment to back our customers, communities and each other. Here, you\u2019ll learn and grow as we help you create a career journey that\u2019s unique and meaningful to you with benefits, programs, and flexibility that support you personally and professionally. </p>\n<p> At American Express, you\u2019ll be recognized for your contributions, leadership, and impact\u2014every colleague has the opportunity to share in the company\u2019s success. Together, we\u2019ll win as a team, striving to uphold our company values and powerful backing promise to provide the world\u2019s best customer experience every day. And we\u2019ll do it with the utmost integrity, and in an environment where everyone is seen, heard and feels like they belong. </p>\n<h2 id=\"join-team-amex-and-lets-lead-the-way-together\">Join Team Amex and let\u2019s lead the way together.</h2>\n<p> At American Express, we\u2019re on a mission to build new ways to connect with our customers that are meaningful and relevant. The Enterprise Digital &amp; Data Solutions team is responsible for leading the development of all core products and services across all digital channels. We partner closely with colleagues across the company to design and build experiences that globally drive value for our customers. Our goal is to build superb, branded journeys, that drive outstanding digital experiences that adhere to our high standards for accessibility and inclusion.</p>\n<p>Loyalty &amp; Guest is a small team but has significant impact, we oversee and support design for Membership Rewards &amp; Benefits, Amex Guest Homepage (Prospect and Card Members) experiences for our Card Members. The team sits within a larger design group of 100+ talented Product Designers, UX Writers, Researchers, Data Analyst and design operations and work hip to hip with our Product Partners. Loyalty &amp; Guest&#39;s primary goal is to improve continuity and cohesion across the end-to-end digital experiences and tools for our customers to manage their loyalty programs and benefits they get access to through their membership with American Express. Within this space, the focus areas are Vision, Strategy, Experience, Patterns and Tools.</p>\n<p>As a Senior Product Designer, you will serve as a conduit between strategy and execution. You will help establish a shared vision, define holistic user experiences, build adaptive experiences, design frameworks, support optimizing processes, support building and identify/help drive consistent design patterns and experiences across our web products.</p>\n<p>The ideal candidate has strong design and critical thinking skills, with solid experience and practice in visual design, they can zoom out to understand the big picture and zoom in to identify effective ways of improving the whole. To succeed in this role, the Product Designer must have the ability to capture and present complex ideas in simple ways.</p>\n<h2 id=\"how-will-you-make-an-impact-in-this-role\">How will you make an impact in this role?</h2>\n<ul>\n<li>Manage and mentor an Associate Designer</li>\n<li>Support and mentor Junior Designers across the team</li>\n<li>Elevate the overall quality of UX/UI design of the digital experiences for core journeys and products within the Amex Membership Loyalty Program</li>\n<li>Deliver ideation and prototypes in both hi- and lo-fidelity, using pen &amp; paper and digital tools</li>\n<li>Cross functional, cross disciplinary collaboration with product, content writing, research and engineering</li>\n<li>Own the end-to-end strategy and delivery of complex workstreams within the portfolio, using UX frameworks and methodologies to capture and consolidate ideas into a clear and tangible experience strategy</li>\n<li>Partner with research and analytics teams to validate ideas and concepts</li>\n<li>Identify and document design patterns and contribute to the advancement our enterprise design system</li>\n<li>Support team with stakeholder management and presentation</li>\n<li>Champion coherence, connectedness, and continuity of the end-to-end experiences</li>\n</ul>\n<h2 id=\"minimum-qualifications\">Minimum Qualifications</h2>\n<ul>\n<li>5+ years UX/Product Design Experience</li>\n<li>Demonstrate experience solving for large scale, complex projects with moving parts such as interconnected journeys or similar</li>\n<li>Experience presenting complex concepts and ideas clearly and concisely</li>\n<li>Experience consulting across multiple projects, teams, or organizations</li>\n<li>Strong design portfolio demonstrating visual design skills &amp; knowledge for accessibility, responsive and adaptive web design</li>\n<li>Demonstrate comfort with ambiguity and ability to form structure where there is none</li>\n<li>Experience with identifying and documenting design patterns</li>\n<li>Experience running UX Workshop a plus</li>\n<li>Experience working in a heavily regulated industry (financial services preferred) a plus</li>\n<li>Role will be based out of London, UK and will be hybrid in-office and virtual in accordance with Amex Flex enterprise policy Fully virtual employees will not be considered</li>\n<li>Must be eligible to work in the UK</li>\n<li>Experience using tools including Airtable, Mural, Confluence, Sketch, Figma, InVision, Excel, Powerpoint</li>\n</ul>\n<h2 id=\"whats-in-it-for-you\">What&#39;s in it for you?</h2>\n<ul>\n<li>A flexible hybrid work schedule</li>\n<li>Competitive vacation package</li>\n<li>A complete benefit option suite (Health, dental, vision, retirement program, commuter and well-being benefits). \u00e0 UK benefits?</li>\n<li>Employee discounts (Entertainment, shopping, museums and more!)</li>\n<li>Parental leave</li>\n<li>A community of designers and design leaders with a culture of collaboration and continuous learning</li>\n<li>A design leader that will help you develop a personal development plan and help you navigate your career as a designer</li>\n</ul>\n<p>Offer of employment with American Express is conditioned upon the successful completion of a background verification check, subject to applicable laws and regulations. </p>\n<p> If you require any assistance with the completion of this process \u2013 or need any reasonable adjustments to be made \u2013 then please contact the Recruitment Team on <a href=\"mailto:&#114;&#x65;&#x63;&#x72;&#117;&#105;&#116;&#x6d;&#101;&#110;&#116;&#46;&#x73;&#117;&#112;&#x70;&#111;&#114;&#x74;&#46;&#x75;&#107;&#64;&#97;&#101;&#x78;&#112;&#x2e;&#99;&#111;&#x6d;\">&#114;&#x65;&#x63;&#x72;&#117;&#105;&#116;&#x6d;&#101;&#110;&#116;&#46;&#x73;&#117;&#112;&#x70;&#111;&#114;&#x74;&#46;&#x75;&#107;&#64;&#97;&#101;&#x78;&#112;&#x2e;&#99;&#111;&#x6d;</a></p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1138, "index": "1138", "job_title": "Principal Product Designer UX", "employer": "London Stock Exchange Group", "publish": "TRUE", "publication_date": "Tue, 7 Feb \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://refinitiv.wd3.myworkdayjobs.com/en-US/Careers/job/GBR-London-5-Canada-Square/Principal-Product-Designer-UX_R0066254-1", "job_id": "jfhwefy22", "logo_link": "/jobs/logos/London_Stock_Exchange_Group_logo.svg.png", "location": "London, Hybrid", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://refinitiv.wd3.myworkdayjobs.com/en-US/Careers/login?redirect=%2Fen-US%2FCareers%2Fjob%2FGBR-London-5-Canada-Square%2FPrincipal-Product-Designer-UX_R0066254-1%2Fapply%2FapplyManually", "paid_ad": "", "accepting_applications": "7 Feb", "extended_description": "<p>LSEG and Microsoft have entered an exciting strategic partnership for the development of next-generation data, analytics and cloud infrastructure solutions. Our customers\u2019 needs are evolving and so are financial markets. This partnership will transform the way customers discover, analyse and trade securities around the world. It will also advance our cloud strategy and build the improved resilience, efficiency and agility that our customers need. All of Microsoft\u2019s customers will also have access to our data and analytics capabilities through a single flexible infrastructure that is intuitive and responsive.   If you are interested in being a part of this dynamic strategic partnership,  we look forward to considering your skills and experience.</p>\n<p>LSEG Design is growing!  </p>\n<p>Are you passionate about design and how it builds value for both customers and business? Do you understand sophisticated environments, such as professional financial industries?  </p>\n<p>Come and join us in a dynamic, stimulating industry that has global reach and impact?  </p>\n<p>We are looking to hire a Principal Product Designer to join our team in London. (Hybrid) </p>\n<h2 id=\"role-summary\">Role summary</h2>\n<p>Our user-centred approach keeps us passionate about delivering to our customers what they need. We are focused on designing the most beautiful, accessible, and valuable experiences in complex financial systems.  </p>\n<p>You will create new and innovative design solutions that address the very particular needs of our users. You will work as part of a multi disciplinary team working across all stages of the product lifecycle.  </p>\n<p>Our best designers champion user-needs in their work, bringing project partners and team members with them to deliver intuitive and innovative experiences.  </p>\n<h2 id=\"what-youll-be-doing\">What you&#39;ll be doing</h2>\n<ul>\n<li>deliver in a complex partner environment and leading on a wide range of large engagements  </li>\n<li>lead the solution of larger-scale undefined problem spaces. For example, \u201cHow do portfolio managers share ideas, charts, layouts with other users?\u201d.  </li>\n<li>provide specialist advice to middle and senior management to resolve sophisticated issues  </li>\n<li>demonstrate clear prioritisation and planning for activities to ensure timely delivery  </li>\n<li>be an authority in one or more design fields, provide direction and support for your own team and the wider design team</li>\n</ul>\n<h2 id=\"youll-bring\">You&#39;ll bring</h2>\n<ul>\n<li>significant relevant experience with or without formal education. Whatever the route you\u2019ve taken, you should have a firm understanding of your area of expertise as well as the wider design and product delivery practice  </li>\n<li>a long history of successfully delivering project work within the complex enterprise industries  </li>\n<li>demonstrable experience in a similar role and able to show evidence of how brand affects the approach to product design  </li>\n<li>experience of guiding multi-disciplinary design teams  </li>\n<li>outstanding knowledge and experience in your own design field, as well as deep appreciation and understanding of all others</li>\n</ul>\n<p>At LSEG, we believe that creating a diverse and inclusive organisation is fundamental to the way we deliver on our promise of creating essential partnerships and open opportunities. Our open culture is central to how we deliver our purpose \u2013 driving financial stability, empowering economies and enabling customers to create sustainable growth \u2013 in everything we do.</p>\n<p>Working with us means that you will be part of a dynamic organisation of 25,000 people across 70 countries. However, we will value your individuality and enable you to bring your true self to work so you can help enrich our diverse workforce. You will be part of a collaborative and creative culture where we encourage new ideas and are committed to sustainability across our global business. You will experience the critical role we have in helping to re-engineer the financial ecosystem to support and drive sustainable economic growth. Together, we are aiming to achieve this growth by accelerating the just transition to net zero, enabling growth of the green economy and creating inclusive economic opportunity.</p>\n<p>LSEG offers a range of tailored benefits and support, including healthcare, retirement planning, paid volunteering days and wellbeing initiatives.</p>\n<p>We are proud to be an equal opportunities employer. This means that we do not discriminate on the basis of anyone\u2019s race, religion, colour, national origin, gender, sexual orientation, gender identity, gender expression, age, marital status, veteran status, pregnancy or disability, or any other basis protected under applicable law. Conforming with applicable law, we can reasonably accommodate applicants&#39; and employees&#39; religious practices and beliefs, as well as any mental health or physical disability needs.</p>\n<p>Please take a moment to read this <a href=\"https://nam12.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.lseg.com%2Fsites%2Fdefault%2Ffiles%2Fcontent%2Fdocuments%2FGlobal%2520Applicant%2520Privacy%2520Policy%2520Feb%25202021.pdf&data=04%7C01%7Cbhavya.rajesh%40refinitiv.com%7C5998c534e4414d538b5008d96d2cce9f%7C71ad2f6261e244fc9e8586c2827f6de9%7C0%7C0%7C637660862381807924%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=KNe8LDcvFq66PIokaU7tNfyhLvAiP3WD53PKkQew8pI%3D&reserved=0\">privacy notice</a> carefully, as it describes what personal information London Stock Exchange Group (LSEG) (we) may hold about you, what it\u2019s used for, and how it\u2019s obtained, <a href=\"https://nam12.safelinks.protection.outlook.com/?url=https%3A%2F%2Fprivacyportalde-cdn.onetrust.com%2Fdsarwebform%2F5f7a2da0-bed0-45e8-ac2c-c1f297e2efdc%2F4ae30ef5-8107-4353-a0b5-1bf34dd647f6.html.&data=04%7C01%7Cbhavya.rajesh%40refinitiv.com%7C5998c534e4414d538b5008d96d2cce9f%7C71ad2f6261e244fc9e8586c2827f6de9%7C0%7C0%7C637660862381817886%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=tsXMrVLiU6mEDSYR3lPSoKobrJfrDcmk34w9RIHdUfI%3D&reserved=0\">your rights and how to contact us as a data subject</a>. </p>\n<p>If you are submitting as a Recruitment Agency Partner, it is essential and your responsibility to ensure that candidates applying to LSEG are aware of this privacy notice.</p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1139, "index": "1139", "job_title": "UX Researcher - Basket, Checkout & Payment", "employer": "Tesco", "publish": "TRUE", "publication_date": "Tue, 7 Feb \u201923", "unpublished_date": "", "expiration_date_calculated": "28 Feb", "original_job_description": "https://apply.tesco-careers.com/members/modules/job/detail.php?record=787682", "job_id": "oeehdyru33", "logo_link": "/jobs/logos/tesco-logo.svg", "location": "Farringdon, Hybrid", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://apply.tesco-careers.com/members/?j=787682", "paid_ad": "", "accepting_applications": "7 Feb", "extended_description": "<h2 id=\"whats-in-it-for-you\">What\u2019s in it for you</h2>\n<p>We offer excellent benefits that help make Tesco a great place to work!  These include but are not limited to:</p>\n<ul>\n<li>Annual bonus scheme</li>\n<li>Holiday starting at 25 days plus a personal day (and bank holidays)</li>\n<li>Great colleague discounts and deals, saving you money on everyday purchases, utility bills for the home and more</li>\n<li>Retirement savings plan \u2013 save between 4% and 7.5% and Tesco will match your contribution</li>\n<li>Buy as you earn and Save as you earn share schemes</li>\n<li>Opportunities to get on \u2013 take advantage of our ongoing learning opportunities and award-winning training to help you achieve the career you want</li>\n</ul>\n<h2 id=\"about-the-role\">About the role</h2>\n<p>We are looking for a UX Researcher who can see the possibility in every opportunity - from large transformational projects on big budgets to the small incremental quick wins that will provide millions of our customers with immediate improvements. Together with the Design Manager and the team, you will advocate the needs of the customer challenging user experience problems that impact millions of customers on any basket, payment, and checkout UX initiatives that are a part of the online Tesco grocery shopping platform, creating products and experiences that are compelling and easy to use.</p>\n<p>You will be helping define the way UX Research is run at Tesco, working in partnership with our multidisciplinary team made up of UX and UI Designers, Researchers, Product Managers, Data Analysts, Marketing and Technology teams to shape the customer experience.</p>\n<p>As our ideal candidate, you have a passion for understanding people, their motivations, their behaviours, and the challenges they face. You have excellent observational and analytical skills, the ability to collaborate with other teams, and a determination to do what is right for customers. You will be responsible for identifying customer needs and delivering insights that inform the development of compelling user-friendly interfaces and digital products.</p>\n<h2 id=\"you-will-be-responsible-for\">You will be responsible for</h2>\n<ul>\n<li>Execute qualitative and quantitative research throughout the ux design lifecycle for initiatives on the basket, payment, and checkout areas of tesco.com. Helping from early direction through to post-release validation.</li>\n<li>Support Product teams to define functional and experiential requirements and help drive the user experience vision for projects.</li>\n<li>Work closely with the Product teams and the Design Manager to ensure customer insights are incorporated in our deliverables.</li>\n<li>Support and help the Design team to establish successful research processes and continuously improve our ways of working.</li>\n<li>Synthesise and communicate with clarity and effectiveness the insights of the research to designers and stakeholders.</li>\n<li>Share research expertise and knowledge with others to improve organisational capability and challenge team thinking.</li>\n<li>Closely collaborate with the UX Design Manager to understand challenges, timelines, and opportunities to deliver projects that solve customer problems.</li>\n<li>Work with the UX Research Manager and UX Design Manager to cultivate a positive, supportive, and inclusive team culture. You will be expected to help towards building the research maturity across Tesco.</li>\n</ul>\n<h2 id=\"you-will-need\">You will need</h2>\n<ul>\n<li>University degree of 2:1 or higher in human-computer interaction (HCI), a related field, or equivalent years of professional experience</li>\n<li>Expert-level knowledge in the field of UX research with at least 3 years\u2019 experience of working as a UX researcher on digital products (preferably ecommerce).</li>\n<li>Considerable knowledge and hands-on experience with a range of qualitative and quantitative research methods and techniques (such as usability testing, user profiles personas, journey mapping, surveys, competitor analysis).</li>\n<li>Track record of research results impacting product strategy and development.</li>\n<li>Experience working in an agile product development environment and applying lean UX Research methods.</li>\n<li>Good communication, presentation, and interpersonal skills; the ability to communicate complex concepts clearly and persuasively across different audiences and varying levels of the organisation.</li>\n<li>Ability to collaborate with a wide set of stakeholders including Designers, Product Managers, Developers, and Analysts.</li>\n<li>Experience using online research tools and remote user testing e.g., Optimal Workshop, UserTesting.com, Enjoy HQ, or similar</li>\n</ul>\n<h2 id=\"about-us\">About us</h2>\n<p>Our vision at Tesco is to become every customer\u2019s favourite way to shop, whether they are at home or out on the move.  Our core purpose is \u201cServing our customers, communities and planet a little better every day\u201d.  Serving means more than a transactional relationship with our customers.  It means acting as a responsible and sustainable business for all stakeholders, for the communities we are part of, and for the planet.</p>\n<p>We are proud to have an inclusive culture at Tesco where everyone truly feels able to be themselves.  At Tesco, we not only celebrate diversity, but recognise the value and opportunity it brings.  We\u2019re committed to creating a workplace where differences are valued, and make sure that all colleagues are given the same opportunities.  We\u2019re a big business with diverse working patterns and many business areas which means that we can find something that works for you.  Everyone is welcome at Tesco.</p>\n<p>We have recently announced that we are moving to a more blended working week \u2013 combining office and remote working.  Our offices continue to be where we connect, collaborate and innovate.  Talk to us about how this can work for you.</p>\n<p><em>Note: Should you be successful in your application, your employment will be subject to and conditional upon you providing your bank account details on your agreed start date.</em></p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}, {"id": 1140, "index": "1140", "job_title": "UI/UX Designer", "employer": "YouGov", "publish": "TRUE", "publication_date": "Thu, 9 Feb \u201923", "unpublished_date": "", "expiration_date_calculated": "", "original_job_description": "https://jobs.smartrecruiters.com/YouGov1/743999884506638-ui-ux-designer", "job_id": "iidyet02", "logo_link": "/jobs/logos/YouGov-2019.svg", "location": "London, Remote", "apply_by_date": "", "work_pat": "Permanent", "money_min": "", "money_max": "", "money": "", "money_median": "", "rank": "", "money_indication": "", "show_salary": "FALSE", "apply_link": "https://jobs.smartrecruiters.com/oneclick-ui/company/YouGov1/publication/4b6834e6-e11d-4580-bc72-835a4e867d94?dcr_ci=YouGov1", "paid_ad": "", "accepting_applications": "9 Feb", "extended_description": "<h2 id=\"company-description\">Company Description</h2>\n<p>YouGov is an international research data and analytics group.</p>\n<p>We help the world\u2019s most recognised brands, media owners and agencies to plan, activate and track better marketing activities. As pioneers of online market research, we have been building an ever-growing source of consumer data for the past twenty years. Creating the richest and most complete understanding of your customers\u2019 complex lives. We call it living data.</p>\n<p>We are driven by a set of shared values. We are fast, fearless and innovative. We work diligently to get it right. We are guided by accuracy, ethics and proven methodologies. We respect and trust each other, and bring these values into everything that we do. Unlike our competitors, we understand how opinions and trends change from day-to-day, week-to-week and year-to-year. That\u2019s why we have built a platform that gets you right to the source for reliable, accurate data that reflects the reality of a complicated world. Imagine if you could know what 17 million+ people in over 55 markets were thinking now? Or last week? And do so again and again? That\u2019s why we\u2019re different.</p>\n<p>Rather than commissioned research that\u2019s already out-of-date by the time it reaches someone\u2019s inbox, our data is alive. So, no matter how quickly things change, our clients are always in the know.</p>\n<p>YouGov. Living Consumer Intelligence.</p>\n<h2 id=\"the-culture\">The Culture</h2>\n<p>Diversity and inclusion are fundamental to YouGov. We are committed to giving the world a voice by capturing the opinions of all groups, including the ones that are often under-represented in research. We are also committed to making sure that our products and tools are free from any bias, as accuracy is key to what we do. None of the above can be done without having a truly diverse workforce, in an inclusive workplace. We are very keen on attracting and retaining the best talent. And best talent also means a diverse pool of talent, with various backgrounds and perspectives.</p>\n<p>Supporting the wellbeing of our staff, including maintaining a good work and life balance, is important to us. We support flexible working arrangements where appropriate for a role, with many locations offering a hybrid office-and-remote working approach.</p>\n<p>As an Equal Opportunity Employer, qualified applicants will receive consideration for employment without regard to race, colour, religion, sex, sexual orientation, gender perception or identity, national origin, age, marital status, veteran status, disability status, or any other characteristic protected by law. All employment decisions are made on the basis of occupational qualifications, merit, and business need.</p>\n<h2 id=\"job-description\">Job Description</h2>\n<p>YouGov is looking for a UI/UX Designer to join the SAAS product team.</p>\n<p>You will be joining a cross-functional team of software engineers, developers, product managers, designers, and data analysts. Your main focus as a designer will be taking part in enhancing our customers&#39; journey within the YouGov ecosystem.</p>\n<p>You\u2019ll be responsible for researching, creating concepts, user flows, wireframes and interfaces for our SAAS products and services and working collaboratively to ensure the team is delivering maximum value for our clients and for YouGov. This includes testing and presenting your ideas with users and stakeholders.</p>\n<p>This is a full time role that can be performed remotely or in the office.</p>\n<h2 id=\"what-youll-do\">What you&#39;ll do</h2>\n<ul>\n<li>Work as a partner to product managers, understanding commercial and user challenges, goals and constraints  </li>\n<li>Communicate ideas and concepts by creating wireframes, prototypes &amp; interfaces (Develop UI mock-ups and prototypes that clearly illustrate how internal sites and applications function and look like)</li>\n<li>Testing your ideas with users and stakeholders</li>\n<li>Measuring and demonstrating the impact of your design interventions</li>\n<li>Establish ownership and governance models for the component libraries to ensure branding and UI consistency at scale </li>\n<li>Contribute to the design system and component library</li>\n</ul>\n<h2 id=\"qualifications\">Qualifications</h2>\n<ul>\n<li>A portfolio of design projects you\u2019ve delivered</li>\n<li>Experience of solving complex problems \u2013 through collaboration with various stakeholders</li>\n<li>Strong understanding of human-centric design principles </li>\n<li>Proficient with Sketch/Figma and Zeplin </li>\n<li>Excellent communicator, with strong written and spoken English (B2/C1+) </li>\n<li>High-level understanding and experience of typography, iconography, and color patterns.</li>\n<li>Experience in creating, working with, and maintaining a design system.</li>\n</ul>\n<h2 id=\"additional-information\">Additional Information</h2>\n<p><strong>When applying digital portfolio must be submitted, applications without it will be disregarded.</strong></p>\n<p>To find out how we collect and use your personal data when you apply for a role at YouGov, please read our privacy notice at <a href=\"https://jobs.yougov.com/privacy\">https://jobs.yougov.com/privacy</a></p>\n", "legacy_columns": "", "notes": "", "lead_status": "", "prospect_status": "", "needs_to_be_published": "", "date_lead_added": "", "annie_marie_thinks_its_ready": "", "discovered": "", "contact": "", "contacted": "", "cost": "", "contract_link": "", "invoice_link": "", "paid_date": "", "source_dont_use": "", "money_is_guess_dont_use": "", "where_to_look_to_see_if_this_client_currently_has_vacancies": "", "csv": "", "upload_csv_remember_to_tick_publish": "", "upload_logos": "", "uxbri_org_jobs": ""}]